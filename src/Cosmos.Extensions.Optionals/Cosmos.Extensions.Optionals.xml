<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Extensions.Optionals</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Optionals.DynamicMaybe">
            <summary>
            Dynamic maybe
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.DynamicMaybe.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.DynamicMaybe.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.DynamicMaybe.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.DynamicMaybe.Item(System.Int32)">
            <summary>
            Index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Cosmos.Optionals.DynamicMaybe.Item(System.String)">
            <summary>
            Index
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.ToEnumerable">
            <summary>
            To enumerable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.GetEnumerator">
            <summary>
            Get enumrtator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Contains(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Exists(System.Func{System.String,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.ValueOr(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.ValueOr(System.String,System.Func{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Or(System.String,System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Or(System.String,System.Func{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Else(System.String,Cosmos.Optionals.Maybe{System.Object})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Else(System.String,System.Func{Cosmos.Optionals.Maybe{System.Object}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.ToDynamicObject">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.DynamicMaybe.Keys">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.DynamicMaybe.Values">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Join(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Where(System.Func{System.String,System.Object,System.Boolean})">
            <summary>
            Where
            </summary>
            <param name="predicate"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Where(System.Func{System.Object,System.Boolean})">
            <summary>
            Where
            </summary>
            <param name="predicate"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.Select``1(System.Func{System.String,System.Object,``0})">
            <summary>
            Select
            </summary>
            <param name="selector"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.ToDictionary">
            <summary>
            To Dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicMaybe.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{System.String,System.Object},``0},System.Func{System.Collections.Generic.KeyValuePair{System.String,System.Object},``1})">
            <summary>
            To Dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.DynamicOptionalBuilder">
            <summary>
            Dynamic optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionalBuilder.Create">
            <summary>
            Create the dynamic optional builder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionalBuilder.May(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionalBuilder.SilenceMay(System.Object,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionalBuilder.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject">
            <summary>
            Dynamic optional object
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.#ctor(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Dynamic optional object
            </summary>
            <param name="dynamicDictionary"></param>
            <param name="queueLikeList"></param>
        </member>
        <member name="P:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.Item(System.Int32)">
            <summary>
            Indexer
            </summary>
            <param name="index"></param>
            <exception cref="T:System.IndexOutOfRangeException"></exception>
        </member>
        <member name="P:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.Item(System.String)">
            <summary>
            Indexer
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.GetDynamicObject">
            <summary>
            Get dynamic object
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.ToEnumerable">
            <summary>
            To enumerable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.GetEnumerator">
            <summary>
            Get enumrtator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.Contains(System.String)">
            <summary>
            Contains
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.Exists(System.Func{System.String,System.Boolean})">
            <summary>
            Exists
            </summary>
            <param name="predicate"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.Keys">
            <summary>
            Gets keys
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.DynamicOptionals.DynamicOptionalObject.Values">
            <summary>
            Gets values
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.DynamicOptionals.IDynamicOptionalBuilder">
            <summary>
            Interface for dynamic optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.IDynamicOptionalBuilder.May(System.Object,System.String)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.IDynamicOptionalBuilder.SilenceMay(System.Object,System.String)">
            <summary>
            Silence May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.DynamicOptionals.IDynamicOptionalBuilder.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.Either`2">
            <summary>
            Either
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.Either`2.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Either`2.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Either`2.Exception">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Either`2.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Either`2.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Either`2.UnderlyingExceptionType">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Equals(Cosmos.Optionals.Either{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Equals(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Either`2.CompareTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Either`2.CompareTo(Cosmos.Optionals.Either{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Either`2.op_Equality(Cosmos.Optionals.Either{`0,`1},Cosmos.Optionals.Either{`0,`1})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.op_Inequality(Cosmos.Optionals.Either{`0,`1},Cosmos.Optionals.Either{`0,`1})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.op_LessThan(Cosmos.Optionals.Either{`0,`1},Cosmos.Optionals.Either{`0,`1})">
            <summary>
            Determines if an optional is less than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.op_LessThanOrEqual(Cosmos.Optionals.Either{`0,`1},Cosmos.Optionals.Either{`0,`1})">
            <summary>
            Determines if an optional is less than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.op_GreaterThan(Cosmos.Optionals.Either{`0,`1},Cosmos.Optionals.Either{`0,`1})">
            <summary>
            Determines if an optional is greater than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.op_GreaterThanOrEqual(Cosmos.Optionals.Either{`0,`1},Cosmos.Optionals.Either{`0,`1})">
            <summary>
            Determines if an optional is greater than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Either`2.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Either`2.ToEnumerable">
            <summary>
            To enumerable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Contains(`0)">
            <summary>
            Contains
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Exists(System.Func{`0,System.Boolean})">
            <summary>
            Exists
            </summary>
            <param name="predicate"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.ValueOr(`0)">
            <summary>
            Value or
            </summary>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.ValueOr(System.Func{`0})">
            <summary>
            Value or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.ValueOr(System.Func{`1,`0})">
            <summary>
            Value or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Or(`0)">
            <summary>
            Or
            </summary>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Or(System.Func{`0})">
            <summary>
            Or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Or(System.Func{`1,`0})">
            <summary>
            Or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Else(Cosmos.Optionals.Either{`0,`1})">
            <summary>
            Else
            </summary>
            <param name="alternativeOption"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Else(System.Func{Cosmos.Optionals.Either{`0,`1}})">
            <summary>
            Else
            </summary>
            <param name="alternativeOptionFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Else(System.Func{`1,Cosmos.Optionals.Either{`0,`1}})">
            <summary>
            Else
            </summary>
            <param name="alternativeOptionFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.WithoutException">
            <summary>
            Without exception
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Match``1(System.Func{`0,``0},System.Func{`1,``0})">
            <summary>
            Match
            </summary>
            <param name="someFactory"></param>
            <param name="noneFactory"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Match(System.Action{`0},System.Action{`1})">
            <summary>
            Match
            </summary>
            <param name="someAct"></param>
            <param name="noneAct"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.MatchSome(System.Action{`0})">
            <summary>
            Match some
            </summary>
            <param name="someAct"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.MatchNone(System.Action{`1})">
            <summary>
            Match none
            </summary>
            <param name="noneAct"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Map``1(System.Func{`0,``0})">
            <summary>
            Map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.MapException``1(System.Func{`1,``0})">
            <summary>
            Map exception
            </summary>
            <param name="mapping"></param>
            <typeparam name="TExceptionResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.FlatMap``1(System.Func{`0,Cosmos.Optionals.Either{``0,`1}})">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}},`1)">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <param name="exception"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}},System.Func{`1})">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <param name="exceptionFactory"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Filter(System.Boolean,`1)">
            <summary>
            Filter
            </summary>
            <param name="condition"></param>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Filter(System.Boolean,System.Func{`1})">
            <summary>
            Filter
            </summary>
            <param name="condition"></param>
            <param name="exceptionFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Filter(System.Func{`0,System.Boolean},`1)">
            <summary>
            Filter
            </summary>
            <param name="predicate"></param>
            <param name="exception"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.Filter(System.Func{`0,System.Boolean},System.Func{`1})">
            <summary>
            Filter
            </summary>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.NotNull(`1)">
            <summary>
            Not null
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.NotNull(System.Func{`1})">
            <summary>
            Not null
            </summary>
            <param name="exceptionFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.ToWrappedSome">
            <summary>
            To wrapped optional some
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Either`2.ToWrappedNone">
            <summary>
            To wrapped optional none
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.OptionalExtensions">
            <summary>
            Extensions for optional
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.ToMaybe``1(``0)">
            <summary>
            Maybe
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.ToMaybe``2(``0)">
            <summary>
            Maybe
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.Some``1(``0,Cosmos.Optionals.OptionalType)">
            <summary>
            To some
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.Some``1(``0,System.Func{``0,System.Boolean},Cosmos.Optionals.OptionalType)">
            <summary>
            To some
            </summary>
            <param name="value"></param>
            <param name="predicate"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.Some``2(``0,Cosmos.Optionals.OptionalType)">
            <summary>
            To some
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.Some``2(``0,System.Func{``0,System.Boolean},``1,Cosmos.Optionals.OptionalType)">
            <summary>
            To some
            </summary>
            <param name="value"></param>
            <param name="predicate"></param>
            <param name="exception"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.Some``2(``0,System.Func{``0,System.Boolean},System.Func{``1},Cosmos.Optionals.OptionalType)">
            <summary>
            To some
            </summary>
            <param name="value"></param>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.Some``2(``0,System.Func{``0,System.Boolean},System.Func{``0,``1},Cosmos.Optionals.OptionalType)">
            <summary>
            To some
            </summary>
            <param name="value"></param>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.SomeNotNull``1(``0,Cosmos.Optionals.OptionalType)">
            <summary>
            To some not null
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.SomeNotNull``2(``0,``1,Cosmos.Optionals.OptionalType)">
            <summary>
            To some not null
            </summary>
            <param name="value"></param>
            <param name="exception"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.SomeNotNull``2(``0,System.Func{``1},Cosmos.Optionals.OptionalType)">
            <summary>
            To some not null
            </summary>
            <param name="value"></param>
            <param name="exceptionFactory"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.SomeNotNull``2(``0,System.Func{``0,``1},Cosmos.Optionals.OptionalType)">
            <summary>
            To some not null
            </summary>
            <param name="value"></param>
            <param name="exceptionFactory"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.None``1(``0,Cosmos.Optionals.OptionalType)">
            <summary>
            To none
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.None``2(``0,``1,Cosmos.Optionals.OptionalType)">
            <summary>
            To none
            </summary>
            <param name="value"></param>
            <param name="exception"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.None``1(``0,System.Func{``0,System.Boolean},Cosmos.Optionals.OptionalType)">
            <summary>
            To none
            </summary>
            <param name="value"></param>
            <param name="predicate"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.None``2(``0,System.Func{``0,System.Boolean},``1,Cosmos.Optionals.OptionalType)">
            <summary>
            To none
            </summary>
            <param name="value"></param>
            <param name="predicate"></param>
            <param name="exception"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.None``2(``0,System.Func{``0,System.Boolean},System.Func{``1},Cosmos.Optionals.OptionalType)">
            <summary>
            To none
            </summary>
            <param name="value"></param>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.None``2(``0,System.Func{``0,System.Boolean},System.Func{``0,``1},Cosmos.Optionals.OptionalType)">
            <summary>
            To none
            </summary>
            <param name="value"></param>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.ToOptional``1(System.Nullable{``0},Cosmos.Optionals.OptionalType)">
            <summary>
            To optional
            </summary>
            <param name="value"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.ToOptional``2(System.Nullable{``0},``1,Cosmos.Optionals.OptionalType)">
            <summary>
            To optional
            </summary>
            <param name="value"></param>
            <param name="exception"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.ToOptional``2(System.Nullable{``0},System.Func{``1},Cosmos.Optionals.OptionalType)">
            <summary>
            To optional
            </summary>
            <param name="value"></param>
            <param name="exceptionFactory"></param>
            <param name="type"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.ValueOrException``2(Cosmos.Optionals.Optional{``0,``0,``1})">
            <summary>
            Value or exception
            </summary>
            <param name="optional"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.ValueOrThrow``2(Cosmos.Optionals.IOptional{``0},``1)">
            <summary>
            Value or throw
            </summary>
            <param name="optional"></param>
            <param name="exception"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.ValueOrThrow``2(Cosmos.Optionals.IOptional{``0,``1})">
            <summary>
            Value or throw
            </summary>
            <param name="optional"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.Flatten``2(Cosmos.Optionals.IOptionalImpl{Cosmos.Optionals.Maybe{``0},``1})">
            <summary>
            Flatten
            </summary>
            <param name="optional"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.Flatten``3(Cosmos.Optionals.IOptionalImpl{Cosmos.Optionals.Either{``0,``1},``1,``2})">
            <summary>
            Flatten
            </summary>
            <param name="optional"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalExtensions.IsOptionalType(System.Type)">
            <summary>
            Is optional type
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.OptionalsExtensions">
            <summary>
            Extensions for collections
            </summary>
            <summary>
            Extensions for collections
            </summary>
            <summary>
            Extensions for Dictionary
            </summary>
            <summary>
            Extensions for enum
            </summary>
            <summary>
            Extensions for linq
            </summary>
            <summary>
            Extensions for linq
            </summary>
            <summary>
            Optionals extensions
            </summary>
            <summary>
            Optionals extensions
            </summary>
            <summary>
            Optionals extensions
            </summary>
            <summary>
            Optionals extensions
            </summary>
            <summary>
            Optionals extensions
            </summary>
            <summary>
            Optionals extensions
            </summary>
            <summary>
            Optionals extensions
            </summary>
            <summary>
            Extensions for string
            </summary>
            <summary>
            Unsafe extensions for optional
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapAsync``2(Cosmos.Optionals.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{``1}})">
            <summary>
            May async
            </summary>
            <param name="option"></param>
            <param name="mapping"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,``1},System.Boolean)">
            <summary>
            Map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{``1}},System.Boolean)">
            <summary>
            Map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``2(Cosmos.Optionals.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``1}}})">
            <summary>
            Flat map async
            </summary>
            <param name="option"></param>
            <param name="mapping"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,Cosmos.Optionals.Maybe{``1}},System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``1}}},System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(Cosmos.Optionals.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Either{``1,``2}}})">
            <summary>
            Flat map async
            </summary>
            <param name="option"></param>
            <param name="mapping"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,Cosmos.Optionals.Either{``1,``2}},System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Either{``1,``2}}},System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``1(Cosmos.Optionals.Maybe{``0},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}})">
            <summary>
            Filter async
            </summary>
            <param name="option"></param>
            <param name="predicate"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,System.Boolean},System.Boolean)">
            <summary>
            Filter async
            </summary>
            <param name="optionTask"></param>
            <param name="predicate"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Boolean)">
            <summary>
            Filter async
            </summary>
            <param name="optionTask"></param>
            <param name="predicate"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.NotNullAsync``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}})">
            <summary>
            Not null async
            </summary>
            <param name="optionTask"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.OrAsync``1(Cosmos.Optionals.Maybe{``0},System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Or async
            </summary>
            <param name="option"></param>
            <param name="alternativeFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.OrAsync``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0},System.Boolean)">
            <summary>
            Or async
            </summary>
            <param name="optionTask"></param>
            <param name="alternativeFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.OrAsync``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{System.Threading.Tasks.Task{``0}},System.Boolean)">
            <summary>
            Or async
            </summary>
            <param name="optionTask"></param>
            <param name="alternativeFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ElseAsync``1(Cosmos.Optionals.Maybe{``0},System.Func{System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}}})">
            <summary>
            Else async
            </summary>
            <param name="option"></param>
            <param name="alternativeOptionFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ElseAsync``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{Cosmos.Optionals.Maybe{``0}},System.Boolean)">
            <summary>
            Else async
            </summary>
            <param name="optionTask"></param>
            <param name="alternativeOptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ElseAsync``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}}},System.Boolean)">
            <summary>
            Else async
            </summary>
            <param name="optionTask"></param>
            <param name="alternativeOptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.WithExceptionAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},``1)">
            <summary>
            With exception async
            </summary>
            <param name="optionTask"></param>
            <param name="exception"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.WithExceptionAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``1},System.Boolean)">
            <summary>
            With exception async
            </summary>
            <param name="optionTask"></param>
            <param name="exceptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlattenAsync``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{Cosmos.Optionals.Maybe{``0}}})">
            <summary>
            Flatten async
            </summary>
            <param name="optionTask"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapAsync``3(Cosmos.Optionals.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{``2}})">
            <summary>
            Map async
            </summary>
            <param name="option"></param>
            <param name="mapping"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,``2},System.Boolean)">
            <summary>
            Map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{``2}},System.Boolean)">
            <summary>
            Map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapExceptionAsync``3(Cosmos.Optionals.Either{``0,``1},System.Func{``1,System.Threading.Tasks.Task{``2}})">
            <summary>
            Map exception async
            </summary>
            <param name="option"></param>
            <param name="mapping"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TExceptionResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapExceptionAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``1,``2},System.Boolean)">
            <summary>
            Map exception async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TExceptionResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapExceptionAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``1,System.Threading.Tasks.Task{``2}},System.Boolean)">
            <summary>
            Map exception async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TExceptionResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(Cosmos.Optionals.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Either{``2,``1}}})">
            <summary>
            Flat map async
            </summary>
            <param name="option"></param>
            <param name="mapping"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,Cosmos.Optionals.Either{``2,``1}},System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Either{``2,``1}}},System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(Cosmos.Optionals.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``2}}},``1)">
            <summary>
            Flat map async
            </summary>
            <param name="option"></param>
            <param name="mapping"></param>
            <param name="exception"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(Cosmos.Optionals.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``2}}},System.Func{``1})">
            <summary>
            Flat map async
            </summary>
            <param name="option"></param>
            <param name="mapping"></param>
            <param name="exceptionFactory"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,Cosmos.Optionals.Maybe{``2}},``1,System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="exception"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,Cosmos.Optionals.Maybe{``2}},System.Func{``1},System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="exceptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``2}}},``1,System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="exception"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlatMapAsync``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``2}}},System.Func{``1},System.Boolean)">
            <summary>
            Flat map async
            </summary>
            <param name="optionTask"></param>
            <param name="mapping"></param>
            <param name="exceptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``2(Cosmos.Optionals.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},``1)">
            <summary>
            Filter async
            </summary>
            <param name="option"></param>
            <param name="predicate"></param>
            <param name="exception"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``2(Cosmos.Optionals.Either{``0,``1},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``1})">
            <summary>
            Filter async
            </summary>
            <param name="option"></param>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Boolean},``1,System.Boolean)">
            <summary>
            filter  async
            </summary>
            <param name="optionTask"></param>
            <param name="predicate"></param>
            <param name="exception"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Boolean},System.Func{``1},System.Boolean)">
            <summary>
            Filter async
            </summary>
            <param name="optionTask"></param>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},``1,System.Boolean)">
            <summary>
            Filter async
            </summary>
            <param name="optionTask"></param>
            <param name="predicate"></param>
            <param name="exception"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FilterAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{System.Boolean}},System.Func{``1},System.Boolean)">
            <summary>
            Filter async
            </summary>
            <param name="optionTask"></param>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.NotNullAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},``1)">
            <summary>
            Not null async
            </summary>
            <param name="optionTask"></param>
            <param name="exception"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.NotNullAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``1})">
            <summary>
            Not null async
            </summary>
            <param name="optionTask"></param>
            <param name="exceptionFactory"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.OrAsync``2(Cosmos.Optionals.Either{``0,``1},System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
            Or async
            </summary>
            <param name="option"></param>
            <param name="alternativeFactory"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.OrAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0},System.Boolean)">
            <summary>
            Or async
            </summary>
            <param name="optionTask"></param>
            <param name="alternativeFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.OrAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{System.Threading.Tasks.Task{``0}},System.Boolean)">
            <summary>
            Or async
            </summary>
            <param name="optionTask"></param>
            <param name="alternativeFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ElseAsync``2(Cosmos.Optionals.Either{``0,``1},System.Func{System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}}})">
            <summary>
            Else async
            </summary>
            <param name="option"></param>
            <param name="alternativeOptionFactory"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ElseAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{Cosmos.Optionals.Either{``0,``1}},System.Boolean)">
            <summary>
            Else async
            </summary>
            <param name="optionTask"></param>
            <param name="alternativeOptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ElseAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}}},System.Boolean)">
            <summary>
            Else async
            </summary>
            <param name="optionTask"></param>
            <param name="alternativeOptionFactory"></param>
            <param name="executeOnCapturedContext"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.WithoutExceptionAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}})">
            <summary>
            Without exception async
            </summary>
            <param name="optionTask"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FlattenAsync``2(System.Threading.Tasks.Task{Cosmos.Optionals.Either{Cosmos.Optionals.Either{``0,``1},``1}})">
            <summary>
            Flatten async
            </summary>
            <param name="optionTask"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapValues``1(System.Collections.Generic.IEnumerable{Cosmos.Optionals.Maybe{``0}})">
            <summary>
            Flattens a sequence of maybe into a sequence containing all inner values.
            Empty elements are discarded.
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapValues``2(System.Collections.Generic.IEnumerable{Cosmos.Optionals.Either{``0,``1}})">
            <summary>
            Flattens a sequence of either into a sequence containing all inner values.
            Empty elements and their exceptional values are discarded.
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.MapExceptions``2(System.Collections.Generic.IEnumerable{Cosmos.Optionals.Either{``0,``1}})">
            <summary>
            Flattens a sequence of optionals into a sequence containing all exceptional values.
            Non-empty elements and their values are discarded.
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FindOrNone``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},``0,Cosmos.Optionals.OptionalType)">
            <summary>
            Returns the value associated with the specified key if such exists.
            A dictionary lookup will be used if available, otherwise falling
            back to a linear scan of the enumerable.
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <param name="type"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FirstOrNone``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the first element of a sequence if such exists.
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.FirstOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Returns the first element of a sequence, satisfying a specified predicate, 
            if such exists.
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.LastOrNone``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns the last element of a sequence if such exists.
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.LastOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Returns the last element of a sequence, satisfying a specified predicate, 
            if such exists.
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SingleOrNone``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns a single element from a sequence, if it exists 
            and is the only element in the sequence.
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SingleOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            Returns a single element from a sequence, satisfying a specified predicate, 
            if it exists and is the only element in the sequence.
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ElementAtOrNone``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Returns an element at a specified position in a sequence if such exists.
            </summary>
            <param name="source"></param>
            <param name="index"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.TryGetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            TryGetValue wrapper with option types.
            It returns Some of the value when a value for the give key is present
            or None other-side
            </summary>
            <param name="source"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.TryParse``1(System.String,System.Boolean)">
            <summary>
            Try parse
            </summary>
            <param name="value"></param>
            <param name="ignoreCase"></param>
            <typeparam name="TEnum"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.Select``2(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,``1})">
            <summary>
            Select
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SelectMany``2(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``1}}})">
            <summary>
            Select many
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SelectMany``3(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``1}}},System.Func{``0,``1,``2})">
            <summary>
            Select many
            </summary>
            <param name="source"></param>
            <param name="collectionSelector"></param>
            <param name="resultSelector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TCollection"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.Where``1(System.Threading.Tasks.Task{Cosmos.Optionals.Maybe{``0}},System.Func{``0,System.Boolean})">
            <summary>
            Where
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.Select``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,``2})">
            <summary>
            Select
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SelectMany``3(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Either{``2,``1}}})">
            <summary>
            Select many
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SelectMany``4(System.Threading.Tasks.Task{Cosmos.Optionals.Either{``0,``1}},System.Func{``0,System.Threading.Tasks.Task{Cosmos.Optionals.Either{``2,``1}}},System.Func{``0,``2,``3})">
            <summary>
            Select many
            </summary>
            <param name="source"></param>
            <param name="collectionSelector"></param>
            <param name="resultSelector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TCollection"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.Select``2(Cosmos.Optionals.Maybe{``0},System.Func{``0,``1})">
            <summary>
            Select
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SelectMany``2(Cosmos.Optionals.Maybe{``0},System.Func{``0,Cosmos.Optionals.Maybe{``1}})">
            <summary>
            Select many
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SelectMany``3(Cosmos.Optionals.Maybe{``0},System.Func{``0,Cosmos.Optionals.Maybe{``1}},System.Func{``0,``1,``2})">
            <summary>
            Select many
            </summary>
            <param name="source"></param>
            <param name="collectionSelector"></param>
            <param name="resultSelector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TCollection"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.Where``1(Cosmos.Optionals.Maybe{``0},System.Func{``0,System.Boolean})">
            <summary>
            Where
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.Select``3(Cosmos.Optionals.Either{``0,``1},System.Func{``0,``2})">
            <summary>
            Select
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SelectMany``3(Cosmos.Optionals.Either{``0,``1},System.Func{``0,Cosmos.Optionals.Either{``2,``1}})">
            <summary>
            Select many
            </summary>
            <param name="source"></param>
            <param name="selector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SelectMany``4(Cosmos.Optionals.Either{``0,``1},System.Func{``0,Cosmos.Optionals.Either{``2,``1}},System.Func{``0,``2,``3})">
            <summary>
            Select many
            </summary>
            <param name="source"></param>
            <param name="collectionSelector"></param>
            <param name="resultSelector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TCollection"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeType(System.Type)">
            <summary>
            Return a non-nullable type version for the given <see cref="T:System.Type"/>.<br />
            获取所给定的可空类型的不可空类型
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeType(System.Reflection.TypeInfo)">
            <summary>
            Return a non-nullable type version for the given <see cref="T:System.Reflection.TypeInfo"/>.<br />
            获取所给定的可空类型的不可空类型
            </summary>
            <param name="typeInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeInvoke(System.EventHandler,System.Object)">
            <summary>
            Invoke the given <see cref="T:System.EventHandler"/> in a safe way.<br />
            以给定参数安全执行事件
            </summary>
            <param name="handler"></param>
            <param name="sender"></param>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeInvoke(System.EventHandler,System.Object,System.EventArgs)">
            <summary>
            Invoke the given <see cref="T:System.EventHandler"/> in a safe way.<br />
            以给定参数安全执行事件
            </summary>
            <param name="handler"></param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeInvoke``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Invoke the given <see cref="T:System.EventHandler`1"/> in a safe way.<br />
            以给定参数安全执行事件
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="hander"></param>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeValue``1(System.Nullable{``0})">
            <summary>
            Return a safe value<br />
            安全返回值
            </summary>
            <param name="value"> 可空值 </param>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeValue``1(System.Nullable{``0},``0)">
            <summary>
            Return a safe value<br />
            安全返回值
            <para>如果可空值真为空，则返回默认值</para>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="value"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeValue(System.String)">
            <summary>
            Return a safe <see cref="T:System.String"/> value.
            获取 Null安全 的字符串
            </summary>
            <param name="string"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeValue(System.Text.Encoding)">
            <summary>
            Return a safe <see cref="T:System.Text.Encoding"/> value.<br />
            返回一个 <see cref="T:System.Text.Encoding"/> 安全值。
            </summary>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeValue(System.Text.Encoding,System.Text.Encoding)">
            <summary>
            Return a safe <see cref="T:System.Text.Encoding"/> value.<br />
            返回一个 <see cref="T:System.Text.Encoding"/> 安全值。
            </summary>
            <param name="encoding"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeDateTime(System.Object)">
            <summary>
            Return a safe <see cref="T:System.DateTime"/> value.<br />
            获取安全时间类型
            </summary>
            <param name="object"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeDateTime(System.Object,System.DateTime)">
            <summary>
            Return a safe <see cref="T:System.DateTime"/> value.<br />
            获取安全时间类型
            </summary>
            <param name="object"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeGuid(System.Object)">
            <summary>
            Return a safe <see cref="T:System.Guid"/> value.<br />
            获取安全的 Guid 类型
            </summary>
            <param name="object"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeGuid(System.Object,System.Guid)">
            <summary>
            Return a safe <see cref="T:System.Guid"/> value.<br />
            获取安全的 Guid 类型
            </summary>
            <param name="object"></param>
            <param name="defaultValue"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeQueryable``1(System.Linq.IQueryable{``0})">
            <summary>
            Return a safe <see cref="T:System.Linq.IQueryable`1"/> value.<br />
            安全获得 <see cref="T:System.Linq.IQueryable`1"/> 集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeQueryable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Return a safe <see cref="T:System.Linq.IQueryable`1"/> value.<br />
            安全获得 <see cref="T:System.Linq.IQueryable`1"/> 集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeQueryable(System.Linq.IQueryable)">
            <summary>
            Return a safe <see cref="T:System.Linq.IQueryable`1"/> value.<br />
            安全获得 <see cref="T:System.Linq.IQueryable`1"/> 集合
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeQueryable(System.Collections.IEnumerable)">
            <summary>
            Return a safe <see cref="T:System.Linq.IQueryable`1"/> value.<br />
            安全获得 <see cref="T:System.Linq.IQueryable`1"/> 集合
            </summary>
            <param name="enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeString(System.Object)">
            <summary>
            Return a safe <see cref="T:System.String"/> value.<br />
            安全获取字符串类型
            </summary>
            <param name="object"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeString(System.Object,System.String)">
            <summary>
            Return a safe <see cref="T:System.String"/> value.<br />
            安全获取字符串类型
            </summary>
            <param name="object"></param>
            <param name="defaultVal"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.SafeTrim(System.String)">
            <summary>
            To remove space and return a safe <see cref="T:System.String"/> value.<br />
            安全移除空白字符
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.NoneIfEmpty(System.String)">
            <summary>
            None if empty
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.NoneIfWhitespace(System.String)">
            <summary>
            None if whitespace
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ToNullable``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Convert <see cref="T:Cosmos.Optionals.Maybe`1"/> to nullable version of <typeparamref name="T"/><br />
            将指定的 <see cref="T:Cosmos.Optionals.Maybe`1"/> 转换为可空版本。
            </summary>
            <param name="option"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ValueOrDefault``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Return the value of the given <see cref="T:Cosmos.Optionals.Maybe`1"/>, if null then returns the default value.<br />
            返回给定 <see cref="T:Cosmos.Optionals.Maybe`1"/> 的值，如果不存在该值则返回默认值。
            </summary>
            <param name="option"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ValueOrFailure``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Return the value of the given <see cref="T:Cosmos.Optionals.Maybe`1"/>, if null then raise an <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/>.<br />
            返回给定 <see cref="T:Cosmos.Optionals.Maybe`1"/> 的值，如果不存在该值则抛出一个 <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> 异常。
            </summary>
            <param name="option"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:Cosmos.Optionals.OptionalValueMissingException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ToNullable``2(Cosmos.Optionals.Either{``0,``1})">
            <summary>
            Convert <see cref="T:Cosmos.Optionals.Either`2"/> to nullable version of <typeparamref name="T"/><br />
            将指定的 <see cref="T:Cosmos.Optionals.Either`2"/> 转换为可空版本。
            </summary>
            <param name="option"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ValueOrDefault``2(Cosmos.Optionals.Either{``0,``1})">
            <summary>
            Return the value of the given <see cref="T:Cosmos.Optionals.Either`2"/>, if null then returns the default value.<br />
            返回给定 <see cref="T:Cosmos.Optionals.Either`2"/> 的值，如果不存在该值则返回默认值。
            </summary>
            <param name="option"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ValueOrFailure``2(Cosmos.Optionals.Either{``0,``1})">
            <summary>
            Return the value of the given <see cref="T:Cosmos.Optionals.Either`2"/>, if null then raise an <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/>.<br />
            返回给定 <see cref="T:Cosmos.Optionals.Either`2"/> 的值，如果不存在该值则抛出一个 <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> 异常。
            </summary>
            <param name="option"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:Cosmos.Optionals.OptionalValueMissingException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ValueOrFailure``1(Cosmos.Optionals.Maybe{``0},System.String)">
            <summary>
            Return the value of the given <see cref="T:Cosmos.Optionals.Maybe`1"/>, if null then raise an <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> with the given error message.<br />
            返回给定 <see cref="T:Cosmos.Optionals.Maybe`1"/> 的值，如果不存在该值则抛出一个使用给定异常信息的 <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> 异常。
            </summary>
            <param name="option"></param>
            <param name="errorMessage"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:Cosmos.Optionals.OptionalValueMissingException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ValueOrFailure``1(Cosmos.Optionals.Maybe{``0},System.Func{System.String})">
            <summary>
            Return the value of the given <see cref="T:Cosmos.Optionals.Maybe`1"/>, if null then raise an <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> with the given error message.<br />
            返回给定 <see cref="T:Cosmos.Optionals.Maybe`1"/> 的值，如果不存在该值则抛出一个使用给定异常信息的 <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> 异常。
            </summary>
            <param name="option"></param>
            <param name="errorMessageFactory"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:Cosmos.Optionals.OptionalValueMissingException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ValueOrFailure``2(Cosmos.Optionals.Either{``0,``1},System.String)">
            <summary>
            Return the value of the given <see cref="T:Cosmos.Optionals.Either`2"/>, if null then raise an <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> with the given error message.<br />
            返回给定 <see cref="T:Cosmos.Optionals.Either`2"/> 的值，如果不存在该值则抛出一个使用给定异常信息的 <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> 异常。
            </summary>
            <param name="option"></param>
            <param name="errorMessage"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:Cosmos.Optionals.OptionalValueMissingException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.OptionalsExtensions.ValueOrFailure``2(Cosmos.Optionals.Either{``0,``1},System.Func{``1,System.String})">
            <summary>
            Return the value of the given <see cref="T:Cosmos.Optionals.Either`2"/>, if null then raise an <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> with the given error message.<br />
            返回给定 <see cref="T:Cosmos.Optionals.Either`2"/> 的值，如果不存在该值则抛出一个使用给定异常信息的 <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> 异常。
            </summary>
            <param name="option"></param>
            <param name="errorMessageFactory"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:Cosmos.Optionals.OptionalValueMissingException"></exception>
        </member>
        <member name="T:Cosmos.Optionals.IOptional">
            <summary>
            Interface for optional
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.IOptional.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.IOptional.HasValue">
            <summary>
            Has value
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.IDynamicOptional">
            <summary>
            Interface for Dynamic optional
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.IDynamicOptional.Key">
            <summary>
            Key
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.IDynamicOptional.HasValue">
            <summary>
            Has value
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.IDynamicOptional.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Contains(System.String)">
            <summary>
            Contains
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Exists(System.Func{System.String,System.Boolean})">
            <summary>
            Exists
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.ValueOr(System.String,System.Object)">
            <summary>
            Value or
            </summary>
            <param name="key"></param>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.ValueOr(System.String,System.Func{System.Object})">
            <summary>
            Value or
            </summary>
            <param name="key"></param>
            <param name="alternativeFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Or(System.String,System.Object)">
            <summary>
            Or
            </summary>
            <param name="key"></param>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Or(System.String,System.Func{System.Object})">
            <summary>
            Or
            </summary>
            <param name="key"></param>
            <param name="alternativeFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Else(System.String,Cosmos.Optionals.Maybe{System.Object})">
            <summary>
            Else
            </summary>
            <param name="key"></param>
            <param name="alternativeMaybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Else(System.String,System.Func{Cosmos.Optionals.Maybe{System.Object}})">
            <summary>
            Else
            </summary>
            <param name="key"></param>
            <param name="alternativeMaybeFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.ToDynamicObject">
            <summary>
            Convert to dynamic object
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.IDynamicOptional.Keys">
            <summary>
            Gets keys
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.IDynamicOptional.Values">
            <summary>
            Gets values
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Join(System.Object,System.String)">
            <summary>
            Join
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Where(System.Func{System.String,System.Object,System.Boolean})">
            <summary>
            Where
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Where(System.Func{System.Object,System.Boolean})">
            <summary>
            Where
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.Select``1(System.Func{System.String,System.Object,``0})">
            <summary>
            Select
            </summary>
            <param name="selector"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.ToDictionary">
            <summary>
            To Dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IDynamicOptional.ToDictionary``2(System.Func{System.Collections.Generic.KeyValuePair{System.String,System.Object},``0},System.Func{System.Collections.Generic.KeyValuePair{System.String,System.Object},``1})">
            <summary>
            To Dictionary
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.IOptional`1">
            <summary>
            Interface for optional
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.IOptional`1.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.IOptional`1.UnderlyingType">
            <summary>
            Gets UnderlyingType of value
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.IOptional`1.Contains(`0)">
            <summary>
            Contains
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptional`1.Exists(System.Func{`0,System.Boolean})">
            <summary>
            Exists
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptional`1.ValueOr(`0)">
            <summary>
            Value or
            </summary>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptional`1.ValueOr(System.Func{`0})">
            <summary>
            Value or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.IOptionalImpl`2">
            <summary>
            Interface for optional
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TImpl"></typeparam>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Or(`0)">
            <summary>
            Or
            </summary>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Or(System.Func{`0})">
            <summary>
            Or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Else(`1)">
            <summary>
            Else
            </summary>
            <param name="alternativeMaybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Else(System.Func{`1})">
            <summary>
            Else
            </summary>
            <param name="alternativeMaybeFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.WithException``1(``0)">
            <summary>
            With exception
            </summary>
            <param name="exception"></param>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.WithException``1(System.Func{``0})">
            <summary>
            With exception
            </summary>
            <param name="exceptionFactory"></param>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Match``1(System.Func{`0,``0},System.Func{``0})">
            <summary>
            Match
            </summary>
            <param name="someFactory"></param>
            <param name="noneFactory"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Match(System.Action{`0},System.Action)">
            <summary>
            Match
            </summary>
            <param name="someAct"></param>
            <param name="noneAct"></param>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.MatchMaybe(System.Action{`0})">
            <summary>
            Match maybe
            </summary>
            <param name="maybeAct"></param>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.MatchNone(System.Action)">
            <summary>
            Match none
            </summary>
            <param name="noneAct"></param>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Map``1(System.Func{`0,``0})">
            <summary>
            Map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}})">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.FlatMap``2(System.Func{`0,Cosmos.Optionals.Either{``0,``1}})">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Filter(System.Boolean)">
            <summary>
            Filter
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.Filter(System.Func{`0,System.Boolean})">
            <summary>
            Filter
            </summary>
            <param name="predicate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`2.NotNull">
            <summary>
            Not null
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.IOptional`2">
            <summary>
            Interface for optional
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.IOptional`2.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.IOptional`2.UnderlyingExceptionType">
            <summary>
            Gets UnderlyingType for exception
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.IOptional`2.ValueOr(System.Func{`1,`0})">
            <summary>
            Value or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.IOptionalImpl`3">
            <summary>
            Interface for optional
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TImpl"></typeparam>
            <typeparam name="TException"></typeparam>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Or(`0)">
            <summary>
            Or
            </summary>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Or(System.Func{`0})">
            <summary>
            Or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Or(System.Func{`1,`0})">
            <summary>
            Or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Else(`2)">
            <summary>
            Else
            </summary>
            <param name="alternativeOption"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Else(System.Func{`2})">
            <summary>
            Else
            </summary>
            <param name="alternativeOptionFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Else(System.Func{`1,`2})">
            <summary>
            Else
            </summary>
            <param name="alternativeOptionFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.WithoutException">
            <summary>
            With exception
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Match``1(System.Func{`0,``0},System.Func{`1,``0})">
            <summary>
            Match
            </summary>
            <param name="someFactory"></param>
            <param name="noneFactory"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Match(System.Action{`0},System.Action{`1})">
            <summary>
            Match
            </summary>
            <param name="someAct"></param>
            <param name="noneAct"></param>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.MatchSome(System.Action{`0})">
            <summary>
            Match some
            </summary>
            <param name="someAct"></param>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.MatchNone(System.Action{`1})">
            <summary>
            Match none
            </summary>
            <param name="noneAct"></param>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Map``1(System.Func{`0,``0})">
            <summary>
            Map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.MapException``1(System.Func{`1,``0})">
            <summary>
            Map exception
            </summary>
            <param name="mapping"></param>
            <typeparam name="TExceptionResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.FlatMap``1(System.Func{`0,Cosmos.Optionals.Either{``0,`1}})">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}},`1)">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <param name="exception"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}},System.Func{`1})">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <param name="exceptionFactory"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Filter(System.Boolean,`1)">
            <summary>
            Filter
            </summary>
            <param name="condition"></param>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Filter(System.Boolean,System.Func{`1})">
            <summary>
            Filter
            </summary>
            <param name="condition"></param>
            <param name="exceptionFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Filter(System.Func{`0,System.Boolean},`1)">
            <summary>
            Filter
            </summary>
            <param name="predicate"></param>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.Filter(System.Func{`0,System.Boolean},System.Func{`1})">
            <summary>
            Filter
            </summary>
            <param name="predicate"></param>
            <param name="exceptionFactory"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.NotNull(`1)">
            <summary>
            Not null
            </summary>
            <param name="exception"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.IOptionalImpl`3.NotNull(System.Func{`1})">
            <summary>
            Not null
            </summary>
            <param name="exceptionFactory"></param>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.Maybe`1">
            <summary>
            Maybe
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`1.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`1.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`1.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`1.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Equals(Cosmos.Optionals.Maybe{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Equals(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.CompareTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.CompareTo(Cosmos.Optionals.Maybe{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.op_Equality(Cosmos.Optionals.Maybe{`0},Cosmos.Optionals.Maybe{`0})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.op_Inequality(Cosmos.Optionals.Maybe{`0},Cosmos.Optionals.Maybe{`0})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.op_LessThan(Cosmos.Optionals.Maybe{`0},Cosmos.Optionals.Maybe{`0})">
            <summary>
            Determines if an optional is less than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.op_LessThanOrEqual(Cosmos.Optionals.Maybe{`0},Cosmos.Optionals.Maybe{`0})">
            <summary>
            Determines if an optional is less than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.op_GreaterThan(Cosmos.Optionals.Maybe{`0},Cosmos.Optionals.Maybe{`0})">
            <summary>
            Determines if an optional is greater than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.op_GreaterThanOrEqual(Cosmos.Optionals.Maybe{`0},Cosmos.Optionals.Maybe{`0})">
            <summary>
            Determines if an optional is greater than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.ToEnumerable">
            <summary>
            To enumerable
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.GetEnumerator">
            <summary>
            Get enumrtator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Contains(`0)">
            <summary>
            Contains
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Exists(System.Func{`0,System.Boolean})">
            <summary>
            Exists
            </summary>
            <param name="predicate"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.ValueOr(`0)">
            <summary>
            Value or
            </summary>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.ValueOr(System.Func{`0})">
            <summary>
            Value or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Or(`0)">
            <summary>
            Or
            </summary>
            <param name="alternative"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Or(System.Func{`0})">
            <summary>
            Or
            </summary>
            <param name="alternativeFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Else(Cosmos.Optionals.Maybe{`0})">
            <summary>
            Else
            </summary>
            <param name="alternativeMaybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Else(System.Func{Cosmos.Optionals.Maybe{`0}})">
            <summary>
            Else
            </summary>
            <param name="alternativeMaybeFactory"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.WithException``1(``0)">
            <summary>
            With exception
            </summary>
            <param name="exception"></param>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.WithException``1(System.Func{``0})">
            <summary>
            With exception
            </summary>
            <param name="exceptionFactory"></param>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Match``1(System.Func{`0,``0},System.Func{``0})">
            <summary>
            Match
            </summary>
            <param name="someFactory"></param>
            <param name="noneFactory"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Match(System.Action{`0},System.Action)">
            <summary>
            Match
            </summary>
            <param name="someAct"></param>
            <param name="noneAct"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.MatchMaybe(System.Action{`0})">
            <summary>
            Match maybe
            </summary>
            <param name="maybeAct"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.MatchNone(System.Action)">
            <summary>
            Match none
            </summary>
            <param name="noneAct"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Map``1(System.Func{`0,``0})">
            <summary>
            Map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}})">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.FlatMap``2(System.Func{`0,Cosmos.Optionals.Either{``0,``1}})">
            <summary>
            Flat map
            </summary>
            <param name="mapping"></param>
            <typeparam name="TResult"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Filter(System.Boolean)">
            <summary>
            Filter
            </summary>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Filter(System.Func{`0,System.Boolean})">
            <summary>
            Filter
            </summary>
            <param name="predicate"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.NotNull">
            <summary>
            Not null
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.ToWrappedSome">
            <summary>
            To wrapped optional some
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.ToWrappedNone">
            <summary>
            To wrapped optional none
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Join``1(``0)">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Join``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <param name="condition"></param>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.Join``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Join
            </summary>
            <param name="optionalToJoin"></param>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.op_Implicit(`0)~Cosmos.Optionals.Maybe{`0}">
            <summary>
            Convert T to Maybe{T}
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`1.op_Implicit(Cosmos.Optionals.Maybe{`0})~`0">
            <summary>
            Convert T from Maybe{T}
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`1.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.Maybe`2">
            <summary>
            Maybe
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.Item1">
            <summary>
            Gets value of he first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.Item2">
            <summary>
            Gets value of he second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.UnderlyingType1">
            <summary>
            Gets UnderlyingType of the first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.UnderlyingType2">
            <summary>
            Gets UnderlyingType of the second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.UnderlyingTypes">
            <summary>
            Gets all underlying type for this <see cref="T:Cosmos.Optionals.Maybe`2"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.Item(System.Int32)">
            <summary>
            Index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.Item(System.String)">
            <summary>
            Index
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Deconstruct(`0@,`1@)">
            <summary>
            Deconstruct
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Deconstruct(Cosmos.Optionals.Maybe{`0}@,Cosmos.Optionals.Maybe{`1}@)">
            <summary>
            Deconstruct
            </summary>
            <param name="maybe1"></param>
            <param name="maybe2"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Equals(System.ValueTuple{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Equals(Cosmos.Optionals.Maybe{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.CompareTo(System.ValueTuple{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.CompareTo(Cosmos.Optionals.Maybe{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.op_Equality(Cosmos.Optionals.Maybe{`0,`1},Cosmos.Optionals.Maybe{`0,`1})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.op_Inequality(Cosmos.Optionals.Maybe{`0,`1},Cosmos.Optionals.Maybe{`0,`1})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.op_LessThan(Cosmos.Optionals.Maybe{`0,`1},Cosmos.Optionals.Maybe{`0,`1})">
            <summary>
            Determines if an optional is less than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.op_LessThanOrEqual(Cosmos.Optionals.Maybe{`0,`1},Cosmos.Optionals.Maybe{`0,`1})">
            <summary>
            Determines if an optional is less than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.op_GreaterThan(Cosmos.Optionals.Maybe{`0,`1},Cosmos.Optionals.Maybe{`0,`1})">
            <summary>
            Determines if an optional is greater than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.op_GreaterThanOrEqual(Cosmos.Optionals.Maybe{`0,`1},Cosmos.Optionals.Maybe{`0,`1})">
            <summary>
            Determines if an optional is greater than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.op_Implicit(Cosmos.Optionals.Maybe{`0,`1})~System.ValueTuple{`0,`1}">
            <summary>
            Convert maybe to tuple
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.op_Explicit(System.ValueTuple{`0,`1})~Cosmos.Optionals.Maybe{`0,`1}">
            <summary>
            Convert maybe from tuple
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Contains(System.ValueTuple{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Exists(System.Func{System.ValueTuple{`0,`1},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.ValueOr(System.ValueTuple{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.ValueOr(System.Func{System.ValueTuple{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Or(System.ValueTuple{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Or(System.Func{System.ValueTuple{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Else(Cosmos.Optionals.Maybe{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Else(System.Func{Cosmos.Optionals.Maybe{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.WithException``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.WithException``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Match``1(System.Func{System.ValueTuple{`0,`1},``0},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Match(System.Action{System.ValueTuple{`0,`1}},System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.MatchMaybe(System.Action{System.ValueTuple{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.MatchNone(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Map``1(System.Func{System.ValueTuple{`0,`1},``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.FlatMap``1(System.Func{System.ValueTuple{`0,`1},Cosmos.Optionals.Maybe{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.FlatMap``2(System.Func{System.ValueTuple{`0,`1},Cosmos.Optionals.Either{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Filter(System.Func{System.ValueTuple{`0,`1},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.NotNull">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.ToWrappedSome">
            <summary>
            To wrapped optional some
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.ToWrappedNone">
            <summary>
            To wrapped optional none
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Join``1(``0)">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Join``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <param name="condition"></param>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`2.Join``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Join
            </summary>
            <param name="optionalToJoin"></param>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`2.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.Maybe`3">
            <summary>
            Maybe
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.Item1">
            <summary>
            Gets value of he first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.Item2">
            <summary>
            Gets value of he second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.Item3">
            <summary>
            Gets value of he third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.UnderlyingType1">
            <summary>
            Gets UnderlyingType of the first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.UnderlyingType2">
            <summary>
            Gets UnderlyingType of the second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.UnderlyingType3">
            <summary>
            Gets UnderlyingType of the third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.UnderlyingTypes">
            <summary>
            Gets all underlying type for this <see cref="T:Cosmos.Optionals.Maybe`3"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.Item(System.Int32)">
            <summary>
            Index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.Item(System.String)">
            <summary>
            Index
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Deconstruct(`0@,`1@,`2@)">
            <summary>
            Deconstruct
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <param name="item3"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Deconstruct(Cosmos.Optionals.Maybe{`0}@,Cosmos.Optionals.Maybe{`1}@,Cosmos.Optionals.Maybe{`2}@)">
            <summary>
            Deconstruct
            </summary>
            <param name="maybe1"></param>
            <param name="maybe2"></param>
            <param name="maybe3"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Equals(System.ValueTuple{`0,`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Equals(Cosmos.Optionals.Maybe{`0,`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.CompareTo(System.ValueTuple{`0,`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.CompareTo(Cosmos.Optionals.Maybe{`0,`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.op_Equality(Cosmos.Optionals.Maybe{`0,`1,`2},Cosmos.Optionals.Maybe{`0,`1,`2})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.op_Inequality(Cosmos.Optionals.Maybe{`0,`1,`2},Cosmos.Optionals.Maybe{`0,`1,`2})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.op_LessThan(Cosmos.Optionals.Maybe{`0,`1,`2},Cosmos.Optionals.Maybe{`0,`1,`2})">
            <summary>
            Determines if an optional is less than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.op_LessThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2},Cosmos.Optionals.Maybe{`0,`1,`2})">
            <summary>
            Determines if an optional is less than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.op_GreaterThan(Cosmos.Optionals.Maybe{`0,`1,`2},Cosmos.Optionals.Maybe{`0,`1,`2})">
            <summary>
            Determines if an optional is greater than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.op_GreaterThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2},Cosmos.Optionals.Maybe{`0,`1,`2})">
            <summary>
            Determines if an optional is greater than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.op_Implicit(Cosmos.Optionals.Maybe{`0,`1,`2})~System.ValueTuple{`0,`1,`2}">
            <summary>
            Convert maybe to tuple
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.op_Explicit(System.ValueTuple{`0,`1,`2})~Cosmos.Optionals.Maybe{`0,`1,`2}">
            <summary>
            Convert maybe from tuple
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Contains(System.ValueTuple{`0,`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Exists(System.Func{System.ValueTuple{`0,`1,`2},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.ValueOr(System.ValueTuple{`0,`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.ValueOr(System.Func{System.ValueTuple{`0,`1,`2}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Or(System.ValueTuple{`0,`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Or(System.Func{System.ValueTuple{`0,`1,`2}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Else(Cosmos.Optionals.Maybe{`0,`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Else(System.Func{Cosmos.Optionals.Maybe{`0,`1,`2}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.WithException``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.WithException``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Match``1(System.Func{System.ValueTuple{`0,`1,`2},``0},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Match(System.Action{System.ValueTuple{`0,`1,`2}},System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.MatchMaybe(System.Action{System.ValueTuple{`0,`1,`2}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.MatchNone(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Map``1(System.Func{System.ValueTuple{`0,`1,`2},``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.FlatMap``1(System.Func{System.ValueTuple{`0,`1,`2},Cosmos.Optionals.Maybe{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.FlatMap``2(System.Func{System.ValueTuple{`0,`1,`2},Cosmos.Optionals.Either{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Filter(System.Func{System.ValueTuple{`0,`1,`2},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.NotNull">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.ToWrappedSome">
            <summary>
            To wrapped optional some
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.ToWrappedNone">
            <summary>
            To wrapped optional none
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Join``1(``0)">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Join``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <param name="condition"></param>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`3.Join``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Join
            </summary>
            <param name="optionalToJoin"></param>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`3.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.Maybe`4">
            <summary>
            Maybe
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Item1">
            <summary>
            Gets value of he first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Item2">
            <summary>
            Gets value of he second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Item3">
            <summary>
            Gets value of he third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Item4">
            <summary>
            Gets value of he forth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.UnderlyingType1">
            <summary>
            Gets UnderlyingType of the first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.UnderlyingType2">
            <summary>
            Gets UnderlyingType of the second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.UnderlyingType3">
            <summary>
            Gets UnderlyingType of the third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.UnderlyingType4">
            <summary>
            Gets UnderlyingType of the forth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.UnderlyingTypes">
            <summary>
            Gets all underlying type for this <see cref="T:Cosmos.Optionals.Maybe`4"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Item(System.Int32)">
            <summary>
            Index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Item(System.String)">
            <summary>
            Index
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Deconstruct(`0@,`1@,`2@,`3@)">
            <summary>
            Deconstruct
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <param name="item3"></param>
            <param name="item4"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Deconstruct(Cosmos.Optionals.Maybe{`0}@,Cosmos.Optionals.Maybe{`1}@,Cosmos.Optionals.Maybe{`2}@,Cosmos.Optionals.Maybe{`3}@)">
            <summary>
            Deconstruct
            </summary>
            <param name="maybe1"></param>
            <param name="maybe2"></param>
            <param name="maybe3"></param>
            <param name="maybe4"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Equals(System.ValueTuple{`0,`1,`2,`3})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Equals(Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.CompareTo(System.ValueTuple{`0,`1,`2,`3})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.CompareTo(Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.op_Equality(Cosmos.Optionals.Maybe{`0,`1,`2,`3},Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.op_Inequality(Cosmos.Optionals.Maybe{`0,`1,`2,`3},Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.op_LessThan(Cosmos.Optionals.Maybe{`0,`1,`2,`3},Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <summary>
            Determines if an optional is less than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.op_LessThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2,`3},Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <summary>
            Determines if an optional is less than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.op_GreaterThan(Cosmos.Optionals.Maybe{`0,`1,`2,`3},Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <summary>
            Determines if an optional is greater than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.op_GreaterThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2,`3},Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <summary>
            Determines if an optional is greater than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.op_Implicit(Cosmos.Optionals.Maybe{`0,`1,`2,`3})~System.ValueTuple{`0,`1,`2,`3}">
            <summary>
            Convert maybe to tuple
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.op_Explicit(System.ValueTuple{`0,`1,`2,`3})~Cosmos.Optionals.Maybe{`0,`1,`2,`3}">
            <summary>
            Convert maybe from tuple
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Contains(System.ValueTuple{`0,`1,`2,`3})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Exists(System.Func{System.ValueTuple{`0,`1,`2,`3},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.ValueOr(System.ValueTuple{`0,`1,`2,`3})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.ValueOr(System.Func{System.ValueTuple{`0,`1,`2,`3}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Or(System.ValueTuple{`0,`1,`2,`3})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Or(System.Func{System.ValueTuple{`0,`1,`2,`3}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Else(Cosmos.Optionals.Maybe{`0,`1,`2,`3})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Else(System.Func{Cosmos.Optionals.Maybe{`0,`1,`2,`3}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.WithException``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.WithException``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Match``1(System.Func{System.ValueTuple{`0,`1,`2,`3},``0},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Match(System.Action{System.ValueTuple{`0,`1,`2,`3}},System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.MatchMaybe(System.Action{System.ValueTuple{`0,`1,`2,`3}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.MatchNone(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Map``1(System.Func{System.ValueTuple{`0,`1,`2,`3},``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.FlatMap``1(System.Func{System.ValueTuple{`0,`1,`2,`3},Cosmos.Optionals.Maybe{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.FlatMap``2(System.Func{System.ValueTuple{`0,`1,`2,`3},Cosmos.Optionals.Either{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Filter(System.Func{System.ValueTuple{`0,`1,`2,`3},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.NotNull">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.ToWrappedSome">
            <summary>
            To wrapped optional some
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.ToWrappedNone">
            <summary>
            To wrapped optional none
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Join``1(``0)">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Join``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <param name="condition"></param>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`4.Join``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Join
            </summary>
            <param name="optionalToJoin"></param>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`4.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.Maybe`5">
            <summary>
            Maybe
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Item1">
            <summary>
            Gets value of he first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Item2">
            <summary>
            Gets value of he second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Item3">
            <summary>
            Gets value of he third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Item4">
            <summary>
            Gets value of he forth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Item5">
            <summary>
            Gets value of he fifth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.UnderlyingType1">
            <summary>
            Gets UnderlyingType of the first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.UnderlyingType2">
            <summary>
            Gets UnderlyingType of the second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.UnderlyingType3">
            <summary>
            Gets UnderlyingType of the third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.UnderlyingType4">
            <summary>
            Gets UnderlyingType of the forth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.UnderlyingType5">
            <summary>
            Gets UnderlyingType of the fifth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.UnderlyingTypes">
            <summary>
            Gets all underlying type for this <see cref="T:Cosmos.Optionals.Maybe`5"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Item(System.Int32)">
            <summary>
            Index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Item(System.String)">
            <summary>
            Index
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Deconstruct(`0@,`1@,`2@,`3@,`4@)">
            <summary>
            Deconstruct
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <param name="item3"></param>
            <param name="item4"></param>
            <param name="item5"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Deconstruct(Cosmos.Optionals.Maybe{`0}@,Cosmos.Optionals.Maybe{`1}@,Cosmos.Optionals.Maybe{`2}@,Cosmos.Optionals.Maybe{`3}@,Cosmos.Optionals.Maybe{`4}@)">
            <summary>
            Deconstruct
            </summary>
            <param name="maybe1"></param>
            <param name="maybe2"></param>
            <param name="maybe3"></param>
            <param name="maybe4"></param>
            <param name="maybe5"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Equals(System.ValueTuple{`0,`1,`2,`3,`4})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Equals(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.CompareTo(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.op_Equality(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.op_Inequality(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.op_LessThan(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <summary>
            Determines if an optional is less than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.op_LessThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <summary>
            Determines if an optional is less than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.op_GreaterThan(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <summary>
            Determines if an optional is greater than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.op_GreaterThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <summary>
            Determines if an optional is greater than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.op_Implicit(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})~System.ValueTuple{`0,`1,`2,`3,`4}">
            <summary>
            Convert maybe to tuple
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4})~Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4}">
            <summary>
            Convert maybe from tuple
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Contains(System.ValueTuple{`0,`1,`2,`3,`4})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Exists(System.Func{System.ValueTuple{`0,`1,`2,`3,`4},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.ValueOr(System.ValueTuple{`0,`1,`2,`3,`4})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.ValueOr(System.Func{System.ValueTuple{`0,`1,`2,`3,`4}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Or(System.ValueTuple{`0,`1,`2,`3,`4})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Or(System.Func{System.ValueTuple{`0,`1,`2,`3,`4}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Else(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Else(System.Func{Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.WithException``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.WithException``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Match``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4},``0},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Match(System.Action{System.ValueTuple{`0,`1,`2,`3,`4}},System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.MatchMaybe(System.Action{System.ValueTuple{`0,`1,`2,`3,`4}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.MatchNone(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Map``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4},``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.FlatMap``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4},Cosmos.Optionals.Maybe{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.FlatMap``2(System.Func{System.ValueTuple{`0,`1,`2,`3,`4},Cosmos.Optionals.Either{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Filter(System.Func{System.ValueTuple{`0,`1,`2,`3,`4},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.NotNull">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.ToWrappedSome">
            <summary>
            To wrapped optional some
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.ToWrappedNone">
            <summary>
            To wrapped optional none
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Join``1(``0)">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Join``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <param name="condition"></param>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`5.Join``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Join
            </summary>
            <param name="optionalToJoin"></param>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`5.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.Maybe`6">
            <summary>
            Maybe
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Item1">
            <summary>
            Gets value of he first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Item2">
            <summary>
            Gets value of he second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Item3">
            <summary>
            Gets value of he third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Item4">
            <summary>
            Gets value of he forth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Item5">
            <summary>
            Gets value of he fifth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Item6">
            <summary>
            Gets value of he sixth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.UnderlyingType1">
            <summary>
            Gets UnderlyingType of the first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.UnderlyingType2">
            <summary>
            Gets UnderlyingType of the second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.UnderlyingType3">
            <summary>
            Gets UnderlyingType of the third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.UnderlyingType4">
            <summary>
            Gets UnderlyingType of the forth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.UnderlyingType5">
            <summary>
            Gets UnderlyingType of the fifth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.UnderlyingType6">
            <summary>
            Gets UnderlyingType of the sixth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.UnderlyingTypes">
            <summary>
            Gets all underlying type for this <see cref="T:Cosmos.Optionals.Maybe`6"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Item(System.Int32)">
            <summary>
            Index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Item(System.String)">
            <summary>
            Index
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Deconstruct(`0@,`1@,`2@,`3@,`4@,`5@)">
            <summary>
            Deconstruct
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <param name="item3"></param>
            <param name="item4"></param>
            <param name="item5"></param>
            <param name="item6"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Deconstruct(Cosmos.Optionals.Maybe{`0}@,Cosmos.Optionals.Maybe{`1}@,Cosmos.Optionals.Maybe{`2}@,Cosmos.Optionals.Maybe{`3}@,Cosmos.Optionals.Maybe{`4}@,Cosmos.Optionals.Maybe{`5}@)">
            <summary>
            Deconstruct
            </summary>
            <param name="maybe1"></param>
            <param name="maybe2"></param>
            <param name="maybe3"></param>
            <param name="maybe4"></param>
            <param name="maybe5"></param>
            <param name="maybe6"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Equals(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.CompareTo(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.op_Equality(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.op_Inequality(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.op_LessThan(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <summary>
            Determines if an optional is less than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.op_LessThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <summary>
            Determines if an optional is less than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.op_GreaterThan(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <summary>
            Determines if an optional is greater than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.op_GreaterThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <summary>
            Determines if an optional is greater than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.op_Implicit(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})~System.ValueTuple{`0,`1,`2,`3,`4,`5}">
            <summary>
            Convert maybe to tuple
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5})~Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5}">
            <summary>
            Convert maybe from tuple
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Contains(System.ValueTuple{`0,`1,`2,`3,`4,`5})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Exists(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.ValueOr(System.ValueTuple{`0,`1,`2,`3,`4,`5})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.ValueOr(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Or(System.ValueTuple{`0,`1,`2,`3,`4,`5})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Or(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Else(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Else(System.Func{Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.WithException``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.WithException``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Match``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5},``0},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Match(System.Action{System.ValueTuple{`0,`1,`2,`3,`4,`5}},System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.MatchMaybe(System.Action{System.ValueTuple{`0,`1,`2,`3,`4,`5}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.MatchNone(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Map``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5},``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.FlatMap``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5},Cosmos.Optionals.Maybe{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.FlatMap``2(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5},Cosmos.Optionals.Either{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Filter(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.NotNull">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.ToWrappedSome">
            <summary>
            To wrapped optional some
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.ToWrappedNone">
            <summary>
            To wrapped optional none
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Join``1(``0)">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Join``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Join
            </summary>
            <param name="valueToJoin"></param>
            <param name="condition"></param>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`6.Join``1(Cosmos.Optionals.Maybe{``0})">
            <summary>
            Join
            </summary>
            <param name="optionalToJoin"></param>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`6.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.Maybe`7">
            <summary>
            Maybe
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item1">
            <summary>
            Gets value of he first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item2">
            <summary>
            Gets value of he second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item3">
            <summary>
            Gets value of he third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item4">
            <summary>
            Gets value of he forth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item5">
            <summary>
            Gets value of he fifth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item6">
            <summary>
            Gets value of he sixth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item7">
            <summary>
            Gets value of he seventh item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingType1">
            <summary>
            Gets UnderlyingType of the first item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingType2">
            <summary>
            Gets UnderlyingType of the second item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingType3">
            <summary>
            Gets UnderlyingType of the third item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingType4">
            <summary>
            Gets UnderlyingType of the forth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingType5">
            <summary>
            Gets UnderlyingType of the fifth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingType6">
            <summary>
            Gets UnderlyingType of the sixth item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingType7">
            <summary>
            Gets UnderlyingType of the seventh item
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.UnderlyingTypes">
            <summary>
            Gets all underlying type for this <see cref="T:Cosmos.Optionals.Maybe`7"/>.
            </summary>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item(System.Int32)">
            <summary>
            Index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Item(System.String)">
            <summary>
            Index
            </summary>
            <param name="key"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Deconstruct(`0@,`1@,`2@,`3@,`4@,`5@,`6@)">
            <summary>
            Deconstruct
            </summary>
            <param name="item1"></param>
            <param name="item2"></param>
            <param name="item3"></param>
            <param name="item4"></param>
            <param name="item5"></param>
            <param name="item6"></param>
            <param name="item7"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Deconstruct(Cosmos.Optionals.Maybe{`0}@,Cosmos.Optionals.Maybe{`1}@,Cosmos.Optionals.Maybe{`2}@,Cosmos.Optionals.Maybe{`3}@,Cosmos.Optionals.Maybe{`4}@,Cosmos.Optionals.Maybe{`5}@,Cosmos.Optionals.Maybe{`6}@)">
            <summary>
            Deconstruct
            </summary>
            <param name="maybe1"></param>
            <param name="maybe2"></param>
            <param name="maybe3"></param>
            <param name="maybe4"></param>
            <param name="maybe5"></param>
            <param name="maybe6"></param>
            <param name="maybe7"></param>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Equals(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Equals(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.CompareTo(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.CompareTo(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.op_Equality(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.op_Inequality(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.op_LessThan(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            Determines if an optional is less than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.op_LessThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            Determines if an optional is less than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.op_GreaterThan(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            Determines if an optional is greater than another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.op_GreaterThanOrEqual(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6},Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <summary>
            Determines if an optional is greater than or equal to another optional.
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.op_Implicit(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})~System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}">
            <summary>
            Convert maybe to tuple
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.op_Explicit(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})~Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6}">
            <summary>
            Convert maybe from tuple
            </summary>
            <param name="tuple"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.ToString">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Contains(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Exists(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.ValueOr(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.ValueOr(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Or(System.ValueTuple{`0,`1,`2,`3,`4,`5,`6})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Or(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Else(Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Else(System.Func{Cosmos.Optionals.Maybe{`0,`1,`2,`3,`4,`5,`6}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.WithException``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.WithException``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Match``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6},``0},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Match(System.Action{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}},System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.MatchMaybe(System.Action{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.MatchNone(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Map``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6},``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.FlatMap``1(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6},Cosmos.Optionals.Maybe{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.FlatMap``2(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6},Cosmos.Optionals.Either{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.Filter(System.Func{System.ValueTuple{`0,`1,`2,`3,`4,`5,`6},System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.NotNull">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.ToWrappedSome">
            <summary>
            To wrapped optional some
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Maybe`7.ToWrappedNone">
            <summary>
            To wrapped optional none
            </summary>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Maybe`7.Nothing">
            <summary>
            Nothing
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionalBuilder">
            <summary>
            Named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionalBuilder.Create">
            <summary>
            Create the named optional builder
            </summary>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionalBuilder.May``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionalBuilder.May``1(``0,System.String)">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder">
            <summary>
            Interface for named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder.May``1(``0)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder.May``1(``0,System.String)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`1">
            <summary>
            Interface for named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`1.May``1(``0)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`1.May``1(``0,System.String)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`1.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`2">
            <summary>
            Interface for named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`2.May``1(``0)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`2.May``1(``0,System.String)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`2.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`3">
            <summary>
            Interface for named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`3.May``1(``0)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`3.May``1(``0,System.String)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`3.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`4">
            <summary>
            Interface for named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`4.May``1(``0)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`4.May``1(``0,System.String)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`4.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`5">
            <summary>
            Interface for named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`5.May``1(``0)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`5.May``1(``0,System.String)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`5.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`6">
            <summary>
            Interface for named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`6.May``1(``0)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`6.May``1(``0,System.String)">
            <summary>
            May
            </summary>
            <param name="value"></param>
            <param name="key"></param>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`6.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`7">
            <summary>
            Interface for named optional builder
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.NamedOptionals.INamedOptionalBuilder`7.Build">
            <summary>
            Build
            </summary>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.None`1">
            <summary>
            None
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Optionals.None`1.Equals(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`1.Equals(Cosmos.Optionals.None{`0})">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.None`1.CompareTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`1.CompareTo(Cosmos.Optionals.None{`0})">
            <summary>
            Compare to
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.None`1.op_Explicit(Cosmos.Optionals.Some{`0})~Cosmos.Optionals.None{`0}">
            <summary>
            Convert maybe to none
            </summary>
            <param name="some"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.None`1.op_Explicit(Cosmos.Optionals.Maybe{`0})~Cosmos.Optionals.None{`0}">
            <summary>
            Convert maybe to none
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.None`1.Or(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`1.Or(System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`1.Else(Cosmos.Optionals.None{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`1.Else(System.Func{Cosmos.Optionals.None{`0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`1.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`1.Filter(System.Func{`0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`1.NotNull">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Optionals.None`2">
            <summary>
            None
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
        </member>
        <member name="M:Cosmos.Optionals.None`2.Equals(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Equals(Cosmos.Optionals.None{`0,`1})">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.None`2.CompareTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.CompareTo(Cosmos.Optionals.None{`0,`1})">
            <summary>
            Compare to
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.None`2.op_Implicit(Cosmos.Optionals.None{`0,`1})~Cosmos.Optionals.Maybe{`0}">
            <summary>
            implicit operator
            </summary>
            <param name="some"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.None`2.op_Implicit(Cosmos.Optionals.None{`0,`1})~Cosmos.Optionals.None{`0}">
            <summary>
            implicit operator
            </summary>
            <param name="some"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.None`2.Or(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Or(System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Or(System.Func{`1,`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Else(Cosmos.Optionals.None{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Else(System.Func{Cosmos.Optionals.None{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Else(System.Func{`1,Cosmos.Optionals.None{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Filter(System.Boolean,`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Filter(System.Boolean,System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Filter(System.Func{`0,System.Boolean},`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.Filter(System.Func{`0,System.Boolean},System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.NotNull(`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.None`2.NotNull(System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Optionals.Optional">
            <summary>
            Optional utilities
            </summary>
            <summary>
            Optional utilities
            </summary>
            <summary>
            Optional utilities
            </summary>
            <summary>
            Optional utilities
            </summary>
            <summary>
            Optional utilities
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``1(``0)">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``1(System.Nullable{``0})">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``2(``0)">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``2(System.Nullable{``0},``1)">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <param name="exception"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.None``1">
            <summary>
            None
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.None``2(``1)">
            <summary>
            None
            </summary>
            <param name="exception"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``1(``0)">
            <summary>
            Create an instance of <see cref="T:Cosmos.Optionals.IOptional`1"/> from the given value.
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Create an instance of <see cref="T:Cosmos.Optionals.IOptional`1"/> from the given value.
            </summary>
            <param name="value"></param>
            <param name="condition"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``1(System.Nullable{``0})">
            <summary>
            Create an instance of <see cref="T:Cosmos.Optionals.IOptional`1"/> from the given value.
            </summary>
            <param name="nullable"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Optional.Dynamic">
            <summary>
            Get an instance of builder, to build a dynamic Maybe.
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``2(``0,``1)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``3(``0,``1,``2)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``4(``0,``1,``2,``3)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``5(``0,``1,``2,``3,``4)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="value5"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="value5"></param>
            <param name="value6"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="value5"></param>
            <param name="value6"></param>
            <param name="value7"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``2(System.ValueTuple{``0,``1})">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``3(System.ValueTuple{``0,``1,``2})">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``4(System.ValueTuple{``0,``1,``2,``3})">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``5(System.ValueTuple{``0,``1,``2,``3,``4})">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``6(System.ValueTuple{``0,``1,``2,``3,``4,``5})">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.From``7(System.ValueTuple{``0,``1,``2,``3,``4,``5,``6})">
            <summary>
            Some
            </summary>
            <param name="value"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``2(``0,``1)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``3(``0,``1,``2)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``4(``0,``1,``2,``3)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``5(``0,``1,``2,``3,``4)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="value5"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``6(``0,``1,``2,``3,``4,``5)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="value5"></param>
            <param name="value6"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Some``7(``0,``1,``2,``3,``4,``5,``6)">
            <summary>
            Some
            </summary>
            <param name="value1"></param>
            <param name="value2"></param>
            <param name="value3"></param>
            <param name="value4"></param>
            <param name="value5"></param>
            <param name="value6"></param>
            <param name="value7"></param>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.None``2">
            <summary>
            None
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.None``3">
            <summary>
            None
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.None``4">
            <summary>
            None
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.None``5">
            <summary>
            None
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.None``6">
            <summary>
            None
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.None``7">
            <summary>
            None
            </summary>
            <typeparam name="T1"></typeparam>
            <typeparam name="T2"></typeparam>
            <typeparam name="T3"></typeparam>
            <typeparam name="T4"></typeparam>
            <typeparam name="T5"></typeparam>
            <typeparam name="T6"></typeparam>
            <typeparam name="T7"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Cosmos.Optionals.Optional.Named">
            <summary>
            Get an instance of builder, to build a named Maybe.
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.Optional.Wrapped">
            <summary>
            Wrapped optional
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.Some``1(``0)">
            <summary>
            For some value
            </summary>
            <param name="some"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.Some``2(``0)">
            <summary>
            For some value
            </summary>
            <param name="some"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.None``1">
            <summary>
            For nothing
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.None``2(``1)">
            <summary>
            For nothing
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.NoneSlim``1">
            <summary>
            For nothing
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.NoneSlim``2(``1)">
            <summary>
            For nothing
            </summary>
            <param name="exception"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.From``1(``0)">
            <summary>
            Create an instance of <see cref="T:Cosmos.Optionals.IOptional`1"/> from the given value.
            </summary>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.From``1(``0,System.Func{``0,System.Boolean})">
            <summary>
            Create an instance of <see cref="T:Cosmos.Optionals.IOptional`1"/> from the given value.
            </summary>
            <param name="value"></param>
            <param name="condition"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Optionals.Optional.Wrapped.From``1(System.Nullable{``0})">
            <summary>
            Create an instance of <see cref="T:Cosmos.Optionals.IOptional`1"/> from the given value.
            </summary>
            <param name="nullable"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Optionals.OptionalType">
            <summary>
            Optional type
            </summary>
        </member>
        <member name="F:Cosmos.Optionals.OptionalType.ValueType">
            <summary>
            Value type
            </summary>
        </member>
        <member name="F:Cosmos.Optionals.OptionalType.ReferenceType">
            <summary>
            Reference type
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.OptionalValueMissingException">
            <summary>
            Optional value missing exception
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.OptionalValueMissingException.#ctor">
            <summary>
            Create a new <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> instance.
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.OptionalValueMissingException.#ctor(System.String)">
            <summary>
            Create a new <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> instance.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Cosmos.Optionals.OptionalValueMissingException.#ctor(System.Int64)">
            <summary>
            Create a new <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> instance.
            </summary>
            <param name="code"></param>
        </member>
        <member name="M:Cosmos.Optionals.OptionalValueMissingException.#ctor(System.Int64,System.String)">
            <summary>
            Create a new <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> instance.
            </summary>
            <param name="code"></param>
            <param name="message"></param>
        </member>
        <member name="M:Cosmos.Optionals.OptionalValueMissingException.#ctor(System.Exception)">
            <summary>
            Create a new <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> instance.
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="M:Cosmos.Optionals.OptionalValueMissingException.#ctor(System.String,System.Exception)">
            <summary>
            Create a new <see cref="T:Cosmos.Optionals.OptionalValueMissingException"/> instance.
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="T:Cosmos.Optionals.Optional`2">
            <summary>
            Base optional for Some and None.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TImpl"></typeparam>
        </member>
        <member name="F:Cosmos.Optionals.Optional`2.Internal">
            <summary>
            Internal Maybe instance
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.#ctor(`0,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Optionals.Optional`2"/>.
            </summary>
            <param name="value"></param>
            <param name="hasValue"></param>
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.#ctor(Cosmos.Optionals.Maybe{`0})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Optionals.Optional`2"/>.
            </summary>
            <param name="internal"></param>
        </member>
        <member name="P:Cosmos.Optionals.Optional`2.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`2.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`2.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`2.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Contains(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Exists(System.Func{`0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.ValueOr(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.ValueOr(System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Equals(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Equals(`1)">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.CompareTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.CompareTo(`1)">
            <summary>
            Compare to
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Or(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Or(System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Else(`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Else(System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.WithException``1(``0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.WithException``1(System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Match``1(System.Func{`0,``0},System.Func{``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Match(System.Action{`0},System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.MatchMaybe(System.Action{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.MatchNone(System.Action)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Map``1(System.Func{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.FlatMap``2(System.Func{`0,Cosmos.Optionals.Either{``0,``1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.Filter(System.Func{`0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`2.NotNull">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`2.Nothing">
            <summary>
            Nothing.
            </summary>
        </member>
        <member name="T:Cosmos.Optionals.Optional`3">
            <summary>
            Base optional for Some and None.
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
            <typeparam name="TImpl"></typeparam>
        </member>
        <member name="F:Cosmos.Optionals.Optional`3.Either">
            <summary>
            Internal Either instance
            </summary>
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.#ctor(`0,`1,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Optionals.Optional`2"/>.
            </summary>
            <param name="value"></param>
            <param name="exception"></param>
            <param name="hasValue"></param>
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.#ctor(Cosmos.Optionals.Either{`0,`1})">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Optionals.Optional`2"/>.
            </summary>
            <param name="either"></param>
        </member>
        <member name="P:Cosmos.Optionals.Optional`3.HasValue">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`3.Value">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`3.Key">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`3.UnderlyingType">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`3.Exception">
            <inheritdoc />
        </member>
        <member name="P:Cosmos.Optionals.Optional`3.UnderlyingExceptionType">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Contains(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Exists(System.Func{`0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.ValueOr(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.ValueOr(System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.ValueOr(System.Func{`1,`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Equals(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Equals(`2)">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.CompareTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.CompareTo(`2)">
            <summary>
            Compare to
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Or(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Or(System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Or(System.Func{`1,`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Else(`2)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Else(System.Func{`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Else(System.Func{`1,`2})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.WithoutException">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Match``1(System.Func{`0,``0},System.Func{`1,``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Match(System.Action{`0},System.Action{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.MatchSome(System.Action{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.MatchNone(System.Action{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Map``1(System.Func{`0,``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.MapException``1(System.Func{`1,``0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.FlatMap``1(System.Func{`0,Cosmos.Optionals.Either{``0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}},`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.FlatMap``1(System.Func{`0,Cosmos.Optionals.Maybe{``0}},System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Filter(System.Boolean,`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Filter(System.Boolean,System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Filter(System.Func{`0,System.Boolean},`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.Filter(System.Func{`0,System.Boolean},System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.NotNull(`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Optional`3.NotNull(System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Optionals.Some`1">
            <summary>
            Some
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Equals(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Equals(Cosmos.Optionals.Some{`0})">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Equals(Cosmos.Optionals.None{`0})">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.CompareTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.CompareTo(Cosmos.Optionals.Some{`0})">
            <summary>
            Compare to
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.op_Equality(Cosmos.Optionals.Some{`0},Cosmos.Optionals.Some{`0})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.op_Equality(Cosmos.Optionals.Some{`0},Cosmos.Optionals.None{`0})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.op_Equality(Cosmos.Optionals.None{`0},Cosmos.Optionals.Some{`0})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.op_Inequality(Cosmos.Optionals.Some{`0},Cosmos.Optionals.Some{`0})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.op_Inequality(Cosmos.Optionals.Some{`0},Cosmos.Optionals.None{`0})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.op_Inequality(Cosmos.Optionals.None{`0},Cosmos.Optionals.Some{`0})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.op_Explicit(Cosmos.Optionals.None{`0})~Cosmos.Optionals.Some{`0}">
            <summary>
            Convert none to some
            </summary>
            <param name="none"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.op_Explicit(Cosmos.Optionals.Maybe{`0})~Cosmos.Optionals.Some{`0}">
            <summary>
            Convert maybe to some
            </summary>
            <param name="maybe"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Or(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Or(System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Else(Cosmos.Optionals.Some{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Else(System.Func{Cosmos.Optionals.Some{`0}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Filter(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.Filter(System.Func{`0,System.Boolean})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`1.NotNull">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Optionals.Some`2">
            <summary>
            Some
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="TException"></typeparam>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Equals(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Equals(Cosmos.Optionals.Some{`0,`1})">
            <summary>
            Equals
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.CompareTo(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.CompareTo(Cosmos.Optionals.Some{`0,`1})">
            <summary>
            Compare to
            </summary>
            <param name="other"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.op_Equality(Cosmos.Optionals.Some{`0,`1},Cosmos.Optionals.Some{`0,`1})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.op_Equality(Cosmos.Optionals.Some{`0,`1},Cosmos.Optionals.None{`0,`1})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.op_Equality(Cosmos.Optionals.None{`0,`1},Cosmos.Optionals.Some{`0,`1})">
            <summary>
            ==
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.op_Inequality(Cosmos.Optionals.Some{`0,`1},Cosmos.Optionals.Some{`0,`1})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.op_Inequality(Cosmos.Optionals.Some{`0,`1},Cosmos.Optionals.None{`0,`1})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.op_Inequality(Cosmos.Optionals.None{`0,`1},Cosmos.Optionals.Some{`0,`1})">
            <summary>
            !=
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.op_Implicit(Cosmos.Optionals.Some{`0,`1})~Cosmos.Optionals.Maybe{`0}">
            <summary>
            implicit operator
            </summary>
            <param name="some"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.op_Implicit(Cosmos.Optionals.Some{`0,`1})~Cosmos.Optionals.Some{`0}">
            <summary>
            implicit operator
            </summary>
            <param name="some"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Or(`0)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Or(System.Func{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Or(System.Func{`1,`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Else(Cosmos.Optionals.Some{`0,`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Else(System.Func{Cosmos.Optionals.Some{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Else(System.Func{`1,Cosmos.Optionals.Some{`0,`1}})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Filter(System.Boolean,`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Filter(System.Boolean,System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Filter(System.Func{`0,System.Boolean},`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.Filter(System.Func{`0,System.Boolean},System.Func{`1})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.NotNull(`1)">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Optionals.Some`2.NotNull(System.Func{`1})">
            <inheritdoc />
        </member>
    </members>
</doc>
