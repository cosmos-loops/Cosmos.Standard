<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Cosmos.Extensions.Collections</name>
    </assembly>
    <members>
        <member name="T:Cosmos.Collections.EnumerableFactory">
            <summary>
            Enumerable factory
            </summary>
        </member>
        <member name="M:Cosmos.Collections.EnumerableFactory.OfList``1">
            <summary>
            Create list
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableFactory.OfList``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Create list
            </summary>
            <param name="listParams"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.EnumerableFactory.ReadOnly">
            <summary>
            ReadOnly Collection
            </summary>
        </member>
        <member name="M:Cosmos.Collections.EnumerableFactory.ReadOnly.OfList``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Create readonly list
            </summary>
            <param name="listParams"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableFactory.ReadOnly.EmptyCollection``1">
            <summary>
            Gets empty readonly collection.
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableFactory.ReadOnly.EmptyDictionary``2">
            <summary>
            Gets empty readonly dictionary
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.EnumerableProxy`1">
            <summary>
            Enumerable proxy
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.EnumerableProxy`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <inheritdoc />
        </member>
        <member name="M:Cosmos.Collections.EnumerableProxy`1.GetEnumerator">
            <inheritdoc />
        </member>
        <member name="T:Cosmos.Collections.Enumerables">
            <summary>
            Enumerable Utilities
            </summary>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.Merge``1(System.Collections.Generic.IEnumerator{``0},System.Collections.Generic.IEnumerator{``0})">
            <summary>
            Merge
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.Merge``1(System.Collections.Generic.IEnumerator{``0},``0)">
            <summary>
            Merge
            </summary>
            <param name="left"></param>
            <param name="last"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.Merge``1(``0,System.Collections.Generic.IEnumerator{``0})">
            <summary>
            Merge
            </summary>
            <param name="first"></param>
            <param name="right"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.Flatten``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            Flatten
            </summary>
            <param name="inputs"></param>
            <param name="enumerableFunc"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.Flatten(System.Collections.IEnumerable,System.Func{System.Object,System.Collections.IEnumerable})">
            <summary>
            Flatten<br />
            将多层的集合展开并整理为单层集合
            </summary>
            <param name="inputs"></param>
            <param name="enumerate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.Of``1(System.Linq.IQueryable{``0},System.Int32,System.Int32)">
            <summary>
            Queryable page
            </summary>
            <typeparam name="T"></typeparam>
            <param name="queryable">data from database</param>
            <param name="pageNumber">page number</param>
            <param name="itemCountPerPage">page size</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.Of``1(System.Collections.Generic.IEnumerable{``0},System.Int32,System.Int32)">
            <summary>
            Queryable page
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable">data in memory</param>
            <param name="pageNumber">page number</param>
            <param name="itemCountPerPage">page size</param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.EmptyList``1">
            <summary>
            Create an empty list
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.Create``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Create list
            </summary>
            <param name="listParams"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.Enumerables.CreateAsReadOnly``1(System.Collections.Generic.IEnumerable{``0}[])">
            <summary>
            Create readonly list
            </summary>
            <param name="listParams"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.CollectionExtensions">
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
            <summary>
            Collection extensions
            </summary>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch(System.Array,System.Object)">
            <summary>
            Binary Search
            </summary>
            <param name="array"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)">
            <summary>
            Binary Search
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch(System.Array,System.Object,System.Collections.IComparer)">
            <summary>
            Binary Search
            </summary>
            <param name="array"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)">
            <summary>
            Binary Search
            </summary>
            <param name="array"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ContainsAtLeast``1(System.Collections.Generic.ICollection{``0},System.Int32)">
            <summary>
            检查一个集合是否拥有指定数量的成员
            </summary>
            <typeparam name="T">动态类型</typeparam>
            <param name="enumeration"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ContainsEqualCount``1(System.Collections.Generic.ICollection{``0},System.Collections.Generic.ICollection{``0})">
            <summary>
            检查两个集合是否拥有相等数量的成员
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.AddDictionary``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Add dictionary into another dictionary
            </summary>
            <param name="me"></param>
            <param name="other"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TVal"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1)">
            <summary>
            Get value or default
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Get value or default
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetValueOrDefaultCascading``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{``0,``1}},``0,``1)">
            <summary>
            Get value or default cascading
            </summary>
            <param name="dictionaries"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetValueOrDefaultCascading``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{``0,``1}},``0)">
            <summary>
            Get value or default cascading
            </summary>
            <param name="dictionaries"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.AddOrOverride``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            Add or override
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.TryGetValue``2(System.Collections.Generic.IDictionary{``0,``1},``0)">
            <summary>
            Try get value
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.TryGetValueCascading``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{``0,``1}},``0,``1@)">
            <summary>
            Try get value cascading
            </summary>
            <param name="dictionaries"></param>
            <param name="key"></param>
            <param name="value"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.TryGetValueCascading``2(``0,``1@,System.Collections.Generic.IDictionary{``0,``1}[])">
            <summary>
            Try get value cascading
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="dictionaries"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.TryGetValueCascading``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IDictionary{``0,``1}},``0)">
            <summary>
            Try get value cascading
            </summary>
            <param name="dictionaries"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.TryGetValueCascading``2(``0,System.Collections.Generic.IDictionary{``0,``1}[])">
            <summary>
            Try get value cascading
            </summary>
            <param name="key"></param>
            <param name="dictionaries"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            Get or add
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetOrAdd``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Get or add
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="newValueCreator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetOrAddNewInstance``2(System.Collections.Generic.Dictionary{``0,``1},``0)">
            <summary>
            Get or add new default instance
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dictionary"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetOrCalculate``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Get value
            </summary>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="valueCalculator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GetOrAddCalculatedInstance``2(System.Collections.Generic.Dictionary{``0,``1},``0,System.Func{``0,``1})">
            <summary>
            Get value
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="valueCalculator"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GroupByAsDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Group by as dictionary
            </summary>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GroupByAsDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Group by as dictionary
            </summary>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GroupByAsDictionaryOfDictionaries``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Group by dictionary of dictonaries
            </summary>
            <param name="list"></param>
            <param name="keyFunc1"></param>
            <param name="keyFunc2"></param>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TKey1"></typeparam>
            <typeparam name="TKey2"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.GroupByAsDictionaryHash``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            Group by as dictionary hash
            </summary>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.WrapInReadOnlyDictionary``2(System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Wrap in readonly dictionary
            </summary>
            <param name="dictionary"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.SelectDistinctSorted``1(System.Collections.Generic.IList{``0})">
            <summary>
            Select distinct sorted
            </summary>
            <param name="list"></param>
            <typeparam name="TObj"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.Set``2(System.Collections.Generic.Dictionary{``0,``1},``0,``1)">
            <summary>
            Set value
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="value"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.Flatten(System.Collections.IEnumerable,System.Func{System.Object,System.Collections.IEnumerable})">
            <summary>
            将多层的集合展开并整理为单层集合
            </summary>
            <param name="src"></param>
            <param name="enumerate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.Append``1(System.Collections.Generic.IEnumerable{``0},``0[])">
            <summary>
            Append
            </summary>
            <param name="source"></param>
            <param name="items"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.Flatten``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            将多层的集合展开并整理为单层集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="src">   </param>
            <param name="enumerate"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0)">
            <summary>
            Index of
            </summary>
            <param name="source"></param>
            <param name="item"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            Index of
            </summary>
            <param name="source"></param>
            <param name="item"></param>
            <param name="equalityComparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.Contains``1(System.Collections.Generic.IEnumerable{``0},System.Predicate{``0})">
            <summary>
            Contains<br />
            包含
            </summary>
            <param name="me"></param>
            <param name="condition"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.In``1(``0,``0[])">
            <summary>
            In
            </summary>
            <param name="item"></param>
            <param name="items"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.In``1(``0,System.Collections.Generic.IEqualityComparer{``0},``0[])">
            <summary>
            In
            </summary>
            <param name="item"></param>
            <param name="equalityComparer"></param>
            <param name="items"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.In``1(``0,System.Collections.Generic.IEnumerable{``0})">
            <summary>
            In
            </summary>
            <param name="item"></param>
            <param name="items"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.In``1(``0,System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            In
            </summary>
            <param name="item"></param>
            <param name="items"></param>
            <param name="equalityComparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.SelectDistinctSorted``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Select distinct sorted
            </summary>
            <param name="collection"></param>
            <param name="valCalculator"></param>
            <typeparam name="TObj"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.SelectDistinctSortedIgnoreCase(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Select distinct sorted ignore case
            </summary>
            <param name="collection"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.SelectDistinctSortedIgnoreCase(System.Collections.Generic.IEnumerable{System.String},System.Func{System.String,System.String})">
            <summary>
            Select distinct sorted ignore case
            </summary>
            <param name="collection"></param>
            <param name="valCalculator"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.SelectDistinctUnsorted``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            Select distinct un-sorted
            </summary>
            <param name="collection"></param>
            <param name="valCalculator"></param>
            <typeparam name="TObj"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.TakeLast``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Take last
            </summary>
            <param name="src"></param>
            <param name="count"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.Merge``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Merge<br />
            合并集合
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.Merge``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Merge<br />
            合并集合
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <param name="limit"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ToReadOnlyCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            To readonly collection
            </summary>
            <param name="src"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.RandomOrder``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Make the collection random order<br />
            打乱一个集合的顺序
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.SplitInGroups``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Split in groups
            </summary>
            <param name="values"></param>
            <param name="groupSize"></param>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.SplitInGroupsAndRemoveDuplicate``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Split in groups remove duplicates
            </summary>
            <param name="values"></param>
            <param name="groupSize"></param>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ToList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
            To string list
            </summary>
            <param name="me"></param>
            <param name="stringConverter"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ToList``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            To list
            </summary>
            <param name="src"></param>
            <param name="func"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ToSortedArray``1(System.Collections.Generic.IEnumerable{``0},System.Comparison{``0})">
            <summary>
            To sorted array
            </summary>
            <param name="source"></param>
            <param name="comparer"></param>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ToSortedArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            To sorted array
            </summary>
            <param name="source"></param>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.AddRange``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Add range
            </summary>
            <param name="source"></param>
            <param name="collection"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.AddRange``1(System.Collections.Generic.List{``0},System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Add range
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <param name="collection"></param>
            <param name="limit"></param>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.AddRangeInto``1(System.Collections.Generic.IList{``0},System.Collections.Generic.IList{``0})">
            <summary>
            Add into
            </summary>
            <param name="source"></param>
            <param name="target"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},``0)">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch``2(System.Collections.Generic.IList{``0},System.Func{``0,``1},``1)">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="map"></param>
            <param name="value"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0)">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch``2(System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Func{``0,``1},``1)">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="map"></param>
            <param name="value"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch``2(System.Collections.Generic.IList{``0},System.Func{``0,``1},``1,System.Collections.Generic.IComparer{``1})">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="map"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch``1(System.Collections.Generic.IList{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.BinarySearch``2(System.Collections.Generic.IList{``0},System.Int32,System.Int32,System.Func{``0,``1},``1,System.Collections.Generic.IComparer{``1})">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="map"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.MoveToFirst``1(System.Collections.Generic.List{``0},``0)">
            <summary>
            Move to first
            </summary>
            <param name="source"></param>
            <param name="element"></param>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.WrapInReadOnlyCollection``1(System.Collections.Generic.IList{``0})">
            <summary>
            Wrap in readonly connection
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.RemoveDuplicates``1(System.Collections.Generic.IList{``0})">
            <summary>
            Remove deplicates
            </summary>
            <param name="values"></param>
            <typeparam name="TSource"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.RemoveDuplicates``2(System.Collections.Generic.IList{``0},System.Func{``0,``1})">
            <summary>
            Remove buplicates
            </summary>
            <param name="values"></param>
            <param name="duplicatePredicate"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TCheck"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.RemoveDuplicatesIgnoreCase(System.Collections.Generic.IList{System.String})">
            <summary>
            Remove duplicates ignore case
            </summary>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.SafeRemoveRange``1(System.Collections.Generic.List{``0},System.Int32,System.Int32)">
            <summary>
            Safe remove range<br />
            安全地移除指定范围内的成员
            </summary>
            <param name="source"></param>
            <param name="index"></param>
            <param name="count"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.RemoveWhere``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Boolean})">
            <summary>
            Remove where...<br />
            移除满足条件的成员，并最终返回筛选后的结果
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ShuffleInPlace``1(System.Collections.Generic.IList{``0})">
            <summary>
            Shuffle in place
            </summary>
            <param name="items"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ShuffleInPlace``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Shuffle in place
            </summary>
            <param name="items"></param>
            <param name="times"></param>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ShuffleToNewList``1(System.Collections.Generic.IList{``0})">
            <summary>
            Shuffle to new list
            </summary>
            <param name="items"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ShuffleToNewList``1(System.Collections.Generic.IList{``0},System.Int32)">
            <summary>
            Shuffle to new list
            </summary>
            <param name="items"></param>
            <param name="times"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ContainsAtLeast``1(System.Linq.IQueryable{``0},System.Int32)">
            <summary>
            检查一个集合是否拥有指定数量的成员
            </summary>
            <typeparam name="T">动态类型</typeparam>
            <param name="enumeration"></param>
            <param name="count"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.ContainsEqualCount``1(System.Linq.IQueryable{``0},System.Linq.IQueryable{``0})">
            <summary>
            检查两个集合是否拥有相等数量的成员
            </summary>
            <typeparam name="T"></typeparam>
            <param name="this"></param>
            <param name="that"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionExtensions.AddRange``1(System.Collections.Generic.ISet{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Add range
            </summary>
            <param name="set"></param>
            <param name="items"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cosmos.Collections.DictionaryExtensions">
            <summary>
            Extensions for dictionary
            </summary>
            <summary>
            Extensions for dictionary
            </summary>
        </member>
        <member name="M:Cosmos.Collections.DictionaryExtensions.ToDictionary``2(System.Collections.Generic.IList{``1},System.Func{``1,``0})">
            <summary>
            To dictionary
            </summary>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.DictionaryExtensions.ToDictionary``3(System.Collections.Generic.IList{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            To dictionary
            </summary>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.DictionaryExtensions.ToDictionary``2(System.Collections.Hashtable)">
            <summary>
            To dictionary
            </summary>
            <param name="hash"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.DictionaryExtensions.ToDictionaryIgnoringDuplicateKeys``3(System.Collections.Generic.IList{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            To dictionary ignore duplicate keys
            </summary>
            <param name="list"></param>
            <param name="keyFunc"></param>
            <param name="valueFunc"></param>
            <typeparam name="TItem"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.DictionaryExtensions.ToSortedArrayByValue``1(System.Collections.Generic.Dictionary{``0,System.Int32})">
            <summary>
            To sorted array by value
            </summary>
            <param name="list"></param>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.DictionaryExtensions.ToSortedArrayByKey``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            To sorted array by key
            </summary>
            <param name="list"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.DictionaryExtensions.ToTuple``2(System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            To tuple...
            </summary>
            <param name="me"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.DictionaryExtensions.ToString``2(System.Collections.Generic.Dictionary{``0,``1},System.String,System.String)">
            <summary>
            To string
            </summary>
            <param name="dictionary"></param>
            <param name="linker"></param>
            <param name="separator"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.CollectionJudgmentExtensions">
            <summary>
            Extensions of collection
            </summary>
        </member>
        <member name="M:Cosmos.Collections.CollectionJudgmentExtensions.IsNull(System.Collections.IEnumerable)">
            <summary>
            判断集合是否为空
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionJudgmentExtensions.IsNullOrEmpty(System.Collections.IEnumerable)">
            <summary>
            判断集合是否为空
            </summary>
            <param name="source">要处理的集合</param>
            <returns>为空返回 True，不为空返回 False</returns>
        </member>
        <member name="M:Cosmos.Collections.CollectionJudgmentExtensions.IsNullOrEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            判断集合是否为空
            </summary>
            <typeparam name="T">动态类型</typeparam>
            <param name="source">要处理的集合</param>
            <returns>为空返回 True，不为空返回 False</returns>
        </member>
        <member name="T:Cosmos.Collections.EnumerableExtensions">
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
            <summary>
            Enumerable extensions
            </summary>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.AsReadOnly``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            将集合转换为只读集合
            </summary>
            <typeparam name="T"></typeparam>
            <param name="enumerable"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.AsEnumerableProxy``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            As enumerable proxy
            </summary>
            <param name="enumerable"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.AsNullables``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            As Nullables
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.Chunk``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Chunk
            </summary>
            <param name="source"></param>
            <param name="size"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.CountDistinct``2(System.Collections.Generic.IList{``0},System.Func{``0,``1})">
            <summary>
            Count distinct
            </summary>
            <param name="list"></param>
            <param name="valCalculator"></param>
            <typeparam name="TObj"></typeparam>
            <typeparam name="TResult"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Do action for each item
            </summary>
            <param name="src"></param>
            <param name="action"></param>
            <typeparam name="T"></typeparam>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ForEachItem``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Do action for each item, and returns the result.
            </summary>
            <param name="src"></param>
            <param name="action"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.FirstBasedOn``1(System.Collections.Generic.IList{``0},System.Func{``0,System.IComparable})">
            <summary>
            First based on...
            </summary>
            <param name="list"></param>
            <param name="order"></param>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.LastBasedOn``1(System.Collections.Generic.List{``0},System.Func{``0,System.IComparable})">
            <summary>
            Last based on...
            </summary>
            <param name="list"></param>
            <param name="order"></param>
            <typeparam name="TItem"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.NullIfEmpty``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Null if empty
            </summary>
            <param name="source"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.Harvest``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.ICollection{``0})">
            <summary>
            Harvest
            </summary>
            <param name="source"></param>
            <param name="harvester"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.Harvest``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean},System.Collections.Generic.ICollection{``0})">
            <summary>
            Harvest
            </summary>
            <param name="source"></param>
            <param name="predicate"></param>
            <param name="harvester"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.Intercept``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            Intercept
            </summary>
            <param name="source"></param>
            <param name="action"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToIndexedSequence``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            To index sequence
            </summary>
            <param name="src"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToSafeArray``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            To safe array
            </summary>
            <param name="src"></param>
            <typeparam name="TElement"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            To dictionary
            </summary>
            <param name="src"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            To dictionary
            </summary>
            <param name="src"></param>
            <param name="equalityComparer"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0})">
            <summary>
            To readonly dictionary
            </summary>
            <param name="src"></param>
            <param name="keySelector"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{``1},System.Func{``1,``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            To readonly dictionary
            </summary>
            <param name="src"></param>
            <param name="keySelector"></param>
            <param name="comparer"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToReadOnlyDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})">
            <summary>
            To readonly dictionary
            </summary>
            <param name="src"></param>
            <param name="keySelector"></param>
            <param name="elementSelector"></param>
            <param name="comparer"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToReadOnlyDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})">
            <summary>
            To readonly dictionary
            </summary>
            <param name="src"></param>
            <param name="keySelector"></param>
            <param name="elementSelector"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})">
            <summary>
            To readonly dictionary
            </summary>
            <param name="src"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToReadOnlyDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            To readonly dictionary
            </summary>
            <param name="src"></param>
            <param name="comparer"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            To hashset
            </summary>
            <param name="src"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})">
            <summary>
            To hashset
            </summary>
            <param name="src"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToHashSet``1(System.Collections.Generic.IEnumerable{``0},System.Boolean)">
            <summary>
            To HashSet
            </summary>
            <param name="src"></param>
            <param name="ignoreDup"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToHashSet``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            To HashSet
            </summary>
            <param name="src"></param>
            <param name="keyFunc"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TKey"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumerableExtensions.ToHashSetIgnoringDuplicates``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            To HashSet ignore duplicates
            </summary>
            <param name="src"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.EnumeratorExtensions">
            <summary>
            Enumerator Extensions
            </summary>
            <summary>
            Enumerator Extensions
            </summary>
        </member>
        <member name="M:Cosmos.Collections.EnumeratorExtensions.Merge``1(System.Collections.Generic.IEnumerator{``0},System.Collections.Generic.IEnumerator{``0})">
            <summary>
            将两个具有相同种类的元素的集合合并
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left"> </param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumeratorExtensions.Merge``1(System.Collections.Generic.IEnumerator{``0},``0)">
            <summary>
            将一个元素添加到一个具有相同种类的元素的集合内
            </summary>
            <typeparam name="T"></typeparam>
            <param name="left"></param>
            <param name="last"></param>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.EnumeratorExtensions.ToEnumerable``1(System.Collections.Generic.IEnumerator{``0})">
            <summary>
            To Enumerable
            </summary>
            <param name="enumerator"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.EnumeratorExtensions.ToEnumerableAfter``1(System.Collections.Generic.IEnumerator{``0})">
            <summary>
            To Enumerable After
            </summary>
            <param name="enumerator"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cosmos.Collections.ReadOnlyCollectionExtensions">
            <summary>
            ReadOnly collection extensions
            </summary>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyCollectionExtensions.Append``1(System.Collections.Generic.IReadOnlyCollection{``0},``0)">
            <summary>
            Append
            </summary>
            <param name="source"></param>
            <param name="item"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Cosmos.Collections.ReadOnlyDictionaryExtensions">
            <summary>
            ReadOnly dictionary extensions
            </summary>
            <summary>
            ReadOnly dictionary extensions
            </summary>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.Cast``4(System.Collections.Generic.IReadOnlyDictionary{``0,``1})">
            <summary>
            Cast
            </summary>
            <param name="source"></param>
            <typeparam name="TFromKey"></typeparam>
            <typeparam name="TFromValue"></typeparam>
            <typeparam name="TToKey"></typeparam>
            <typeparam name="TToValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0,``1)">
            <summary>
            Get value or default
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.GetValueOrDefault``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)">
            <summary>
            Get value or default
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.GetValueOrDefaultCascading``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IReadOnlyDictionary{``0,``1}},``0,``1)">
            <summary>
            Get value or default cascading
            </summary>
            <param name="dictionaries"></param>
            <param name="key"></param>
            <param name="defaultValue"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.GetValueOrDefaultCascading``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IReadOnlyDictionary{``0,``1}},``0)">
            <summary>
            Get value or default cascading
            </summary>
            <param name="dictionaries"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.TryGetValue``2(System.Collections.Generic.IReadOnlyDictionary{``0,``1},``0)">
            <summary>
            Try get value
            </summary>
            <param name="dictionary"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.TryGetValueCascading``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IReadOnlyDictionary{``0,``1}},``0,``1@)">
            <summary>
            Try get value cascading
            </summary>
            <param name="dictionaries"></param>
            <param name="key"></param>
            <param name="value"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.TryGetValueCascading``2(``0,``1@,System.Collections.Generic.IReadOnlyDictionary{``0,``1}[])">
            <summary>
            Try get value cascading
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <param name="dictionaries"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.TryGetValueCascading``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.IReadOnlyDictionary{``0,``1}},``0)">
            <summary>
            Try get value cascading
            </summary>
            <param name="dictionaries"></param>
            <param name="key"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyDictionaryExtensions.TryGetValueCascading``2(``0,System.Collections.Generic.IReadOnlyDictionary{``0,``1}[])">
            <summary>
            Try get value cascading
            </summary>
            <param name="key"></param>
            <param name="dictionaries"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Cosmos.Collections.ReadOnlyListExtensions">
            <summary>
            ReadOnly list extensions
            </summary>
            <summary>
            ReadOnly list extensions
            </summary>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.AsList``1(System.Collections.Generic.IReadOnlyList{``0})">
            <summary>
            As list
            </summary>
            <param name="list"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.BinarySearch``1(System.Collections.Generic.IReadOnlyList{``0},``0)">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.BinarySearch``2(System.Collections.Generic.IReadOnlyList{``0},System.Func{``0,``1},``1)">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="map"></param>
            <param name="value"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.BinarySearch``1(System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,``0)">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="value"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.BinarySearch``2(System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,System.Func{``0,``1},``1)">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="map"></param>
            <param name="value"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.BinarySearch``1(System.Collections.Generic.IReadOnlyList{``0},``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.BinarySearch``2(System.Collections.Generic.IReadOnlyList{``0},System.Func{``0,``1},``1,System.Collections.Generic.IComparer{``1})">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="map"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.BinarySearch``1(System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Cosmos.Collections.ReadOnlyListExtensions.BinarySearch``2(System.Collections.Generic.IReadOnlyList{``0},System.Int32,System.Int32,System.Func{``0,``1},``1,System.Collections.Generic.IComparer{``1})">
            <summary>
            Binary search
            </summary>
            <param name="list"></param>
            <param name="index"></param>
            <param name="length"></param>
            <param name="map"></param>
            <param name="value"></param>
            <param name="comparer"></param>
            <typeparam name="TSource"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="T:Cosmos.Collections.SetAddRangeResult`1">
            <summary>
            Set and range result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Cosmos.Collections.SetAddRangeResult`1.#ctor(`0,System.Boolean)">
            <summary>
            Create a new instance of <see cref="T:Cosmos.Collections.SetAddRangeResult`1"/>
            </summary>
            <param name="item"></param>
            <param name="added"></param>
        </member>
        <member name="P:Cosmos.Collections.SetAddRangeResult`1.Item">
            <summary>
            Gets item
            </summary>
        </member>
        <member name="P:Cosmos.Collections.SetAddRangeResult`1.Added">
            <summary>
            Addod or not...
            </summary>
        </member>
    </members>
</doc>
